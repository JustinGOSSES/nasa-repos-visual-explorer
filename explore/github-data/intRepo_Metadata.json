{
    "ContinuumIO/elm": {
        "description": "Phase I & part of Phase II of NASA SBIR - Parallel Machine Learning on Satellite Data",
        "name": "ContinuumIO/elm",
        "topics": null,
        "website": "http://ensemble-learning-models.readthedocs.io"
    },
    "ESIPFed/sweet": {
        "description": "Official repository for Semantic Web for Earth and Environmental Terminology (SWEET) Ontologies",
        "name": "ESIPFed/sweet",
        "topics": [
            "ontologies",
            "earth-science",
            "environment",
            "environment-variables",
            "owl-ontology",
            "owl",
            "earth",
            "sweet-ontologies"
        ],
        "website": null
    },
    "JustinSGray/pyCycle": {
        "description": "Thermodynamic cycle modeling library, built on top of OpenMDAO",
        "name": "JustinSGray/pyCycle",
        "topics": null,
        "website": null
    },
    "KeplerGO/K2ephem": {
        "description": "Command-line tool to check whether a Solar System body is (or was) observable by NASA's K2 mission.",
        "name": "KeplerGO/K2ephem",
        "topics": null,
        "website": null
    },
    "KeplerGO/K2fov": {
        "description": "Check whether targets are in the field of view of NASA's K2 space telescope",
        "name": "KeplerGO/K2fov",
        "topics": null,
        "website": "http://keplerscience.arc.nasa.gov"
    },
    "KeplerGO/kadenza": {
        "description": "Converts raw cadence target data from the Kepler space telescope into astronomer-friendly FITS files.",
        "name": "KeplerGO/kadenza",
        "topics": null,
        "website": null
    },
    "KeplerGO/pyke": {
        "description": "Easy command line tools for Kepler, K2 & TESS data analysis.",
        "name": "KeplerGO/pyke",
        "topics": [
            "kepler",
            "k2",
            "tess",
            "astrophysics"
        ],
        "website": "http://pyke.keplerscience.org"
    },
    "NASA-DEVELOP/ADIM": {
        "description": "The Asian Disaster Preparedness Center (ADPC) was established in 1986 to provide technical services and capabilities to national governments in the region. Together with NASA and the United States Agency for International Development (USAID), ADPC is able to use satellite imagery and other geospatial decision-support tools to aid in the prediction and management of environmental events, as well as help communities build resilience to the negative effects of natural hazards in this area of the world. In August 2015, NASA, USAID, and ADPC officially launched the SERVIR-Mekong Hub at the ADPC in Bangkok, Thailand. This hub is in place to support and provide publicly available satellite data on the Lower Mekong region in order to address pressing environmental concerns in Cambodia, Laos, Myanmar, Thailand, and Vietnam. It is a five-year regional project aimed at increasing the use of geospatial analysis in addressing common or urgent policy and planning needs.  The project partners at the ADPC, SERVIR-Mekong Hub, and the NASA SERVIR Coordination Office expressed the need for a script that automates the downloading and processing of data in order to better monitor agricultural drought in the Lower Mekong River Basin. ",
        "name": "NASA-DEVELOP/ADIM",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/ASIT": {
        "description": "The software will load in image collections from Google Earth Engine from different sensors (Landsat 5, 7, and 8, Sentinel 2a, 2b) and the code will identify pixels meeting certain criteria as snow. Then the area of snow can be calculated for a region or for an individual watershed. Then a chart can be generated which would create a visual that shows the change in area covered by snow across images as a percentage of the whole area. As the sky islands stretch across much of Southeastern Arizona, the software also eliminates the need to download multiple images from differing rows/paths.",
        "name": "NASA-DEVELOP/ASIT",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/CBCHI": {
        "description": "Chesapeake Bay Chlorophyll Hotspot Identifier (CBCHI) takes in raw Landsat 8 surface reflectance products and produces two maps to be opened in ArcMap that can be used to identify chlorophyll hotspots.  It also creates a true color image.",
        "name": "NASA-DEVELOP/CBCHI",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/CCROP": {
        "description": "Cover Crop Remotely Observed Performance (CCROP): The Maryland Department of Agriculture (MDA) is interested in verifying winter cover crop implementation and analyzing cover crop productivity using satellite imagery. As they do not have the expertise on-site to automate the process, we used a combination of scripting using JavaScript in Google Earth Engine (GEE) and ArcGIS to identify suitable Landsat and Sentinel images, extract individual farm field characters (such as values for various bands, NDVI, and red-edge) to a table, and export this table. Subsequently, this table will be incorporated in the MDA agronomic database where crop and farm productivity reports can be created as needed.",
        "name": "NASA-DEVELOP/CCROP",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/CMAT": {
        "description": "The Coal Mining Assessment Tool (CMAT) in Google Earth Engine (GEE) monitors the impacts and reclamation efforts of coal mines in the basin. The tool incorporates Earth observations from Landsat 5 Thematic Mapper (TM), Landsat 7 Enhanced Thematic Mapper Plus (ETM+), and Landsat 8 Operational Land Imager (OLI), and utilizes the LandTrendr change detection algorithm to assess land disturbance. CMAT outputs include land disturbance maps and charts showing how land cover, Normalized Difference Vegetation Index (NDVI), Normalized Difference Water Index (NDWI), and tasseled cap transformations have changed from 1985 to 2018.",
        "name": "NASA-DEVELOP/CMAT",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/CORAL-TT": {
        "description": "Calculating Oscillations in Regional Aquatic Locations - Temperature and Turbidity",
        "name": "NASA-DEVELOP/CORAL-TT",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/COVER": {
        "description": "This code develops calibration models using linear regression models with in-situ field data. The calibration models are then used to predict biomass (log), nitrogen percent, and nitrogen content for Landsat images from 2006-2016. Model results and data tables are output as separate files for each field season (i.e. winter and spring seasons).",
        "name": "NASA-DEVELOP/COVER",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/CaVE": {
        "description": "This program can be used with future Landsat 8 satellite data to determine land change in Chalatenango, El Salvador. The results this tool produces will identify land classes and allow data analysis of land change. ",
        "name": "NASA-DEVELOP/CaVE",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/DRIP-SLIP": {
        "description": "DRIP and SLIP Landslide Detection Package",
        "name": "NASA-DEVELOP/DRIP-SLIP",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/DSAT": {
        "description": "Drought Severity Assessment Tool (formerly  Drought Severity Assessment - Decision Support Tool)",
        "name": "NASA-DEVELOP/DSAT",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/ESVIA": {
        "description": "Elkhorn Slough Vegetation Imagery Assessment (ESVIA). This suite of Google Earth Engine Javascript code analyzes vegetation change in a historical time-series using Landsat, as well as current-day vegetation productivity using Sentinel 2A imagery. Included in the scripts are operations such as image acquisition, image processing, and applications of vegetation indices with band combinations highlighting vegetation. The purpose of the software is to apply vegetation indices to Landsat 5, Landsat 8, and Sentinel 2A images, conduct a simply NDVI change detection, create histograms showing data distribution, and export the results. ",
        "name": "NASA-DEVELOP/ESVIA",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/FAULT": {
        "description": "Flood Analysis Utilizing Landsat and ArcMap Tools (FAULT): This product was created in an effort to automate flood analysis throughout the Mississippi River Basin. The objective was to reduce the strenuous research efforts being conducted by relief organizations such as the Federal Emergency Management Agency (FEMA) and United States Geological Survey Hazards Data Distribution Systems (USGS HDDS), allowing them to focus their energy on recovery efforts and future policy. ",
        "name": "NASA-DEVELOP/FAULT",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/FiSSH": {
        "description": "Finding Suitable Spawning Habitats: iSSH uses a compilation of data products during the study range 2003-2018, and includes Grunion Greeters citizen science data, in situ  measurements, and NASA Earth Observations. The Grunion is a fish endemic to California with a range historically in Southern California  (San Diego to Santa Barbara), and a more recent expansion northward to Monterey and San Francisco in the past three decades. During a  \"grunion run\", the fish spawns on the beach, riding the waves onshore to lay its eggs in the sand. This MATLAB app matches user input  of chlorophyll-a levels, ocean temperature, and upwelling indices, to the most the similar conditions at a recorded grunion run from  available data. It may be used to get an idea of the potential size of future grunion runs based on the conditions during past runs.   The application was created using MATLAB's App Designer.",
        "name": "NASA-DEVELOP/FiSSH",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/FoCIS": {
        "description": "Eastern Hemlock Distribution Model: Four codes scripted to run in Google Earth Engine to compute predicted habitat distribution of  Eastern Hemlock in (1) Adirondack Park and (2) New York State.",
        "name": "NASA-DEVELOP/FoCIS",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/GATER": {
        "description": "Geographic Applications for Transitioning Everglades Regions (GATER). Meant for running within the Google Earth Engine API, this JavaScript code provides an algorithm for cloud removal from Landsat scenes, and runs a classification scheme which classifies mangrove extent within Everglades National Park. ",
        "name": "NASA-DEVELOP/GATER",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/GC-ReDI": {
        "description": "Grand Canyon Regions of Drought Impact (GC-ReDI). This Google Earth Engine software quantifies the decreasing water surface area in Lake Mead and the lower Grand Canyon and assesses the resulting changes in land cover \u2013specifically, riparian vegetation and riparian sediment. The software provides images, statistics, and graphs to understand the drought-induced changes.",
        "name": "NASA-DEVELOP/GC-ReDI",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/HAE": {
        "description": "Using the cloud-based computing power of Google Earth Engine (GEE), the Hydrologic Anomaly Index (HAE) is capable of uploading and analyzing large amounts of Earth observation climate data for the purpose of hydrologic analysis and monitoring. The end-user will be able to pull from and modify a library of scripts that are stored in Earth Engine, as well as upload and access data stored on a private data catalog. The final stage of development of the tool will include a more user-friendly application built using Google\u2019s App Engine, in which users will be able to display data products and interactive maps.",
        "name": "NASA-DEVELOP/HAE",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/HIVE-OS": {
        "description": "Honeybee Informatics Via Earth Observations - 2018 Summer - The software was motivated by a collaborator desire to take beehive health data that has traditionally been used aspatially and apply it in a spatial format in conjunction with NASA Earth observations in order to determine what correlations exist between the health data and local landscape, environmental, and atmospheric phenomena. This software addresses this desire at two points. It directs the user to shape their data into a compatible format and then ingests the raw recorded data, converts it to a GeoJSON using Python, and then provides documentation in order for the user to upload their data to Google Earth Engine in order to utilize the scripts generated that access the Earth observations data. These scripts summarize as well as provide statistics for download for the users based on a point or polygon typology.",
        "name": "NASA-DEVELOP/HIVE-OS",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/LCD": {
        "description": "The Normalized Difference Vegetation Index (NDVI) for the study time period is calculated and then compared to the maximum and minimum NDVI from a baseline range of years in order to calculate Relative Greenness (RG). The change in RG from the previous year is found, and this allows the user to identify abrupt change in vegetation. Normalized Burn Ratio (NBR) and USDA Croplands Dataset have been added as additional datasets that can help establish if the change was caused by a fire or by a change in crop type. Recent available NAIP imagery for the study area is also included, as an example of what is available for high resolution imagery within GEE.  Based on a date input by the user, the map viewer displays the RG, the change in RG, the percent change in RG, and the NBR, along with the Cropland layer from that year and NAIP imagery taken closest in time to the requested display date. ",
        "name": "NASA-DEVELOP/LCD",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/LUCT": {
        "description": "We used the Google Earth Engine Code interface to create a classification of land use on the United States Virgin Islands (USVI). We used six classes: water, low density residential, high-density residential, forest/shrub, agriculture and barren. We included DEM, classification points, and landsat imagery bands to analyze the imagery. Our final product is at a 30 meter spatial scale. ",
        "name": "NASA-DEVELOP/LUCT",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/LaSTMoV": {
        "description": "Land Surface Temperature MODIS Visualization (LaSTMoV)",
        "name": "NASA-DEVELOP/LaSTMoV",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/M-SRM": {
        "description": "Modified Snowmelt Runoff model for forecasting snowmelt in central northern Chile (M-SRM).",
        "name": "NASA-DEVELOP/M-SRM",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/MARSHe": {
        "description": "The software will be used locally and possibly region-wide around the Chesapeake Bay to create maps illustrating changes in Chesapeake Bay marsh health from the year 2000 to 2017. It will run analyses on imported imagery to determine changes in features and project results within Google Earth Engine. Once it is shared with project partners, they will be able to use the software to perform their own analyses using the same methodology on a scale of their choosing.",
        "name": "NASA-DEVELOP/MARSHe",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/MASC": {
        "description": "Move Away Superfluous Clouds (MASC). This code removes clouds, cloud shadow, water, and snow pixels from Landsat scenes using the cloud mask layer that is provided with Landsat data.",
        "name": "NASA-DEVELOP/MASC",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/METRIC": {
        "description": "For estimating daily evapotranspiration from Landsat data",
        "name": "NASA-DEVELOP/METRIC",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/MIPDA": {
        "description": "MIPDA (Mapping Insect and Pathogen Disturbance Automation) - LaRC 2017 Spring - ArcMap processing with a Landsat time series that was automated in Python for studying climate of Glacier National Park.",
        "name": "NASA-DEVELOP/MIPDA",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/ORCAA": {
        "description": "The Optical Reef and Coastal Area Assessment (ORCAA) tool in Google Earth Engine allows users to monitor, track, and evaluate water parameters in the Belize and Honduras Barrier Reefs from January 2013 to present using Landsat 8, Sentinel-2, and Aqua/Terra MODIS imagery.",
        "name": "NASA-DEVELOP/ORCAA",
        "topics": [
            "gee",
            "main",
            "turbidity",
            "ndci",
            "cdom",
            "chlorophyll",
            "sst",
            "time-series",
            "landsat-8",
            "sentinel-2",
            "modis",
            "javascript"
        ],
        "website": ""
    },
    "NASA-DEVELOP/POPP": {
        "description": "Palm Oil Plantation Predictor (POPP). This Python software automates the process of downloading, atmospherically correcting, and processing raster data in order to identify potential palm oil plantations.",
        "name": "NASA-DEVELOP/POPP",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/PSTP": {
        "description": "Provisional Surface Temperature Processing (PSTP) script applies cloud- and water-masking techniques to specific raster layers of the USGS Landsat Provisional Surface Temperature product to make imagery analysis-ready. ",
        "name": "NASA-DEVELOP/PSTP",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/PiCo": {
        "description": "Pixelwise Correlation-Based Landscape Classification (PiCo). PiCo, an R script, automates and regionalizes the Climate Landscape Response (CLaRe) metrics developed by Wallace et al 2016. This script performs a pixel-wise regression analysis to produce rasters whose correlation values can be evaluated to target buffelgrass. ",
        "name": "NASA-DEVELOP/PiCo",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/PrIME": {
        "description": "The software can be used to determine what areas in a region receive the most precipitation, and would thus benefit most from rainwater harvesting.",
        "name": "NASA-DEVELOP/PrIME",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/RAiN": {
        "description": "This software can be used to understand precipitation and its influence on resiliency. It will analyze and visualize data as maps and charts.",
        "name": "NASA-DEVELOP/RAiN",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/RIFRAF": {
        "description": "This software was created to address concerns of fire managers in the Missouri River Basin. Previously, fire managers inferred a regional fire risk from separate sources, (i.e. temperature maps, drought indices, and precipitation averages). This software combined partner specified variables that have historically lead to large, complex fire conditions in a single map. ",
        "name": "NASA-DEVELOP/RIFRAF",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/RIG": {
        "description": "Rainfall Intensity Graphs (RIG) v.1.0 - 2018 Spring - A Google Earth Engine Tool developed for end-user the National Park Service at Navajo National Monument (NAVA) in northern Arizona. Quickly visualizes GPM or TRMM in space and gives rainfall intensity values for time.",
        "name": "NASA-DEVELOP/RIG",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/SAVeTrEE": {
        "description": "SAVeTrEE is a script within Google Earth Engine for classifying areas of vegetation mortality. It prompts the user for a year, duration, and spectral index for which a mortality map should be produced, then fits a trend line to an imagery time sequence of vegetative spectral index values calculated from Landsat multispectral data. The slope of the trend line, as well as the spectral index values, are used in determining the final classification of each pixel within the study area. Classification categories are: 1) Growing 2) Mortality (declining) 3) Stable Vegetation and 4) Stable Barren.",
        "name": "NASA-DEVELOP/SAVeTrEE",
        "topics": [
            "javascript",
            "google-earth-engine",
            "wildfires",
            "earth-science"
        ],
        "website": null
    },
    "NASA-DEVELOP/SDCI": {
        "description": "Scaled Drought Condition Index Tool",
        "name": "NASA-DEVELOP/SDCI",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/SET": {
        "description": "Beta version of the Skyglow Estimation Toolbox. Documentation ->",
        "name": "NASA-DEVELOP/SET",
        "topics": null,
        "website": "https://nasa-develop.github.io/SET/"
    },
    "NASA-DEVELOP/SWIM": {
        "description": "This tool allows users to identify surface water from the most current imagery available, or to monitor temporal changes of surface water in their management area.",
        "name": "NASA-DEVELOP/SWIM",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/TAOW": {
        "description": "Turbidity Assessment Over Water - 2017 Summer - The Chesapeake Bay Automation Master Script provides automation for processing atmosperhically corrected satellite imagery. This script specifically pre-processes Landsat 8 and Sentinel-2 datasets that were atmospherically corrected by ACOLITE.",
        "name": "NASA-DEVELOP/TAOW",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/Texas-NAC": {
        "description": "The NAC code takes collections of Landsat 5 TM, Landsat 7 ETM+, and Landsat 8 OLI data in a specified boundary and from 1986 to 2016 and combines it into one merged collection.",
        "name": "NASA-DEVELOP/Texas-NAC",
        "topics": null,
        "website": ""
    },
    "NASA-DEVELOP/VOCAL": {
        "description": "Visualization of CALIPSO (VOCAL). A CALIPSO Cross Cutting tool for visualizing data",
        "name": "NASA-DEVELOP/VOCAL",
        "topics": null,
        "website": "http://nasa-develop.github.io/VOCAL/"
    },
    "NASA-DEVELOP/WET": {
        "description": "2019 Spring JPL Great Lakes Water Resources",
        "name": "NASA-DEVELOP/WET",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/WRIT": {
        "description": "For the AcoFixDual_Tool: Geolocates and rescales ACOLITE output to make it useful in ArcMap.",
        "name": "NASA-DEVELOP/WRIT",
        "topics": null,
        "website": null
    },
    "NASA-DEVELOP/dnppy": {
        "description": "DEVELOP National Program Python package for use with NASA data and GIS!",
        "name": "NASA-DEVELOP/dnppy",
        "topics": null,
        "website": "https://nasa-develop.github.io/dnppy/"
    },
    "NASA-DEVELOP/iMMOD": {
        "description": "iMMOD: An Interactive Model of Mosquito Distribution | This Google Earth Engine (GEE) code visualizes NASA Earth observations, citizen science and public health data relevant to mosquito habitat suitability. The code also implements a model to predict habitat suitability for mosquitoes in Western Europe.",
        "name": "NASA-DEVELOP/iMMOD",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/B-CNN": {
        "description": "Sample code of B-CNN paper  (https://arxiv.org/abs/1709.09890) written in Python3+.",
        "name": "NASA-IMPACT/B-CNN",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/CDI-Dashboard": {
        "description": "This repo is for tracking the agile development of the CDI Dashboard powered by dcd-CAP.",
        "name": "NASA-IMPACT/CDI-Dashboard",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/CSDAP_PlanetFootprintConversion": {
        "description": null,
        "name": "NASA-IMPACT/CSDAP_PlanetFootprintConversion",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/Common-Metadata-Repository": {
        "description": null,
        "name": "NASA-IMPACT/Common-Metadata-Repository",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/DCD-Tool": {
        "description": "A tool for finding broken and dropped datasets within CDI.",
        "name": "NASA-IMPACT/DCD-Tool",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/FGDC_servicelist_GP": {
        "description": "List of services tagged in Geoplatform that are being checked through FGDC Status Checker.",
        "name": "NASA-IMPACT/FGDC_servicelist_GP",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/GraphDB": {
        "description": null,
        "name": "NASA-IMPACT/GraphDB",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/Metadata_Scoring": {
        "description": "This repository holds the current metadata scoring scripts. ",
        "name": "NASA-IMPACT/Metadata_Scoring",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/PLOSONE": {
        "description": null,
        "name": "NASA-IMPACT/PLOSONE",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/cdi_master": {
        "description": "master list of all datasets in the CDI",
        "name": "NASA-IMPACT/cdi_master",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/cf-gcmd-rest": {
        "description": "Rest service for cf and gcmd mapping",
        "name": "NASA-IMPACT/cf-gcmd-rest",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/cf-units-rest": {
        "description": "Rest service for cf and units",
        "name": "NASA-IMPACT/cf-units-rest",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/cloud-optimized-data-pipelines": {
        "description": "For data processing and infrastructure code to support NASA-IMPACT/covid-dashboard",
        "name": "NASA-IMPACT/cloud-optimized-data-pipelines",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/cmr-stac-nncpp": {
        "description": null,
        "name": "NASA-IMPACT/cmr-stac-nncpp",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/covid-api": {
        "description": null,
        "name": "NASA-IMPACT/covid-api",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/covid-dashboard": {
        "description": null,
        "name": "NASA-IMPACT/covid-dashboard",
        "topics": null,
        "website": "https://earthdata.nasa.gov/covid19/"
    },
    "NASA-IMPACT/csdap-bulk-download": {
        "description": "Helper script to download data urls from SDX.",
        "name": "NASA-IMPACT/csdap-bulk-download",
        "topics": null,
        "website": "https://csdap.earthdata.nasa.gov"
    },
    "NASA-IMPACT/csdap-cumulus": {
        "description": "SmallSat Cumulus Deployment",
        "name": "NASA-IMPACT/csdap-cumulus",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/dashboard-api-starter": {
        "description": "API for the Earthdata Dashboard",
        "name": "NASA-IMPACT/dashboard-api-starter",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/dashboard-datasets-starter": {
        "description": "Contains datasets used by `dashboard-api-starter`",
        "name": "NASA-IMPACT/dashboard-datasets-starter",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/data_share": {
        "description": null,
        "name": "NASA-IMPACT/data_share",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/dcd-CAP": {
        "description": "This repo is for tracking the agile development of the CDI Analysis Platform (CAP).",
        "name": "NASA-IMPACT/dcd-CAP",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/earthdata-dashboard-starter": {
        "description": "A simplified dashboard for visual exploration of Earthdata in a map interface",
        "name": "NASA-IMPACT/earthdata-dashboard-starter",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/eis-pilot-dashboard-api": {
        "description": null,
        "name": "NASA-IMPACT/eis-pilot-dashboard-api",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/eis-pilot-dashboard-datasets": {
        "description": null,
        "name": "NASA-IMPACT/eis-pilot-dashboard-datasets",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/eis-pilot-eathdata-dashboard": {
        "description": null,
        "name": "NASA-IMPACT/eis-pilot-eathdata-dashboard",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/eo-metadata-tools": {
        "description": "eo-metadata-tools is a set of repositories for working with Earth Observation metadata. At its core are common libraries and demonstration scripts for accessing the Common Metadata Repository, to be accompanied by more specific modules and scripts to do dataset-specific queries, metadata validation, etc...",
        "name": "NASA-IMPACT/eo-metadata-tools",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/espa-dockerfiles": {
        "description": "Base Dockerfiles for creating ESPA processing nodes",
        "name": "NASA-IMPACT/espa-dockerfiles",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/espa-product-formatter": {
        "description": "ESPA module for product formatting",
        "name": "NASA-IMPACT/espa-product-formatter",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/espa-python-library": {
        "description": "USGS EROS ESPA Metadata manipulation and validation.",
        "name": "NASA-IMPACT/espa-python-library",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/espa-surface-reflectance": {
        "description": "USGS EROS ESPA Surface Reflectance",
        "name": "NASA-IMPACT/espa-surface-reflectance",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-L8S2overlap": {
        "description": "Finds all the Landsat path/rows overlapping each MGRS tile.",
        "name": "NASA-IMPACT/hls-L8S2overlap",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-aws_batch_errors": {
        "description": "Examples of ECS related errors in the HLS stack for coordination with AWS.",
        "name": "NASA-IMPACT/hls-aws_batch_errors",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-base": {
        "description": "Base Dockerfile for shared libraries for HLS processing",
        "name": "NASA-IMPACT/hls-base",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-browse_imagery": {
        "description": "Create and merge GIBS browse imagery for HLS hdf files.",
        "name": "NASA-IMPACT/hls-browse_imagery",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-cmr_stac": {
        "description": "Generate STAC items for HLS products.",
        "name": "NASA-IMPACT/hls-cmr_stac",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-hdf_to_cog": {
        "description": "Generate COGs from HLS hdf files.",
        "name": "NASA-IMPACT/hls-hdf_to_cog",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-laads": {
        "description": "HLS processing container for downloading and syncing LAADS auxiliary data.",
        "name": "NASA-IMPACT/hls-laads",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-land_tiles": {
        "description": "Derive list of valid MGRS land tiles",
        "name": "NASA-IMPACT/hls-land_tiles",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-landsat": {
        "description": "HLS processing container for creating intermediate Landsat surface reflectance products.",
        "name": "NASA-IMPACT/hls-landsat",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-landsat-historic": {
        "description": "Stack to retrieve historic Landsat data for HLS processing.",
        "name": "NASA-IMPACT/hls-landsat-historic",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-landsat-tile": {
        "description": "HLS processing container for gridding intermediate Landsat surface reflectance outputs into an L30 MGRS tile.",
        "name": "NASA-IMPACT/hls-landsat-tile",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-manifest": {
        "description": "Create LPDAAC manifests for HLS products",
        "name": "NASA-IMPACT/hls-manifest",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-metadata": {
        "description": "Generate CMR metadata for HLS products.",
        "name": "NASA-IMPACT/hls-metadata",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-orchestration": {
        "description": "Orchestration Lambdas and Step Functions for HLS",
        "name": "NASA-IMPACT/hls-orchestration",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-s2-supplemental-downloader": {
        "description": null,
        "name": "NASA-IMPACT/hls-s2-supplemental-downloader",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-sentinel": {
        "description": "HLS Sentinel 2 processing container for generating S30 products.",
        "name": "NASA-IMPACT/hls-sentinel",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-sentinel2-downloader": {
        "description": null,
        "name": "NASA-IMPACT/hls-sentinel2-downloader",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-sentinel2-downloader-serverless": {
        "description": "Serverless implementation of the HLS Sentinel 2 Imagery Downloader",
        "name": "NASA-IMPACT/hls-sentinel2-downloader-serverless",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/hls-testing_data": {
        "description": "Repository of sample HLS hdf files for Python library integration tests.",
        "name": "NASA-IMPACT/hls-testing_data",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-thumbnails": {
        "description": "Generate true color thumbnail images from HLS hdf files.",
        "name": "NASA-IMPACT/hls-thumbnails",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/hls-utilities": {
        "description": "Python utilities for HLS data processing containers.",
        "name": "NASA-IMPACT/hls-utilities",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/impact-arc-publication-plots": {
        "description": "ARC publication plots",
        "name": "NASA-IMPACT/impact-arc-publication-plots",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/impact-arc-tools": {
        "description": "Some R scripts for reading content across CMR records",
        "name": "NASA-IMPACT/impact-arc-tools",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/impact-cdi-metrics": {
        "description": "A suite of R scripts for tracking the state of the CDI collection",
        "name": "NASA-IMPACT/impact-cdi-metrics",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/knowledge-graph": {
        "description": null,
        "name": "NASA-IMPACT/knowledge-graph",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/language-models-are-knowledge-graphs-pytorch": {
        "description": "Language models are open knowledge graphs ( non official implementation )",
        "name": "NASA-IMPACT/language-models-are-knowledge-graphs-pytorch",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/lasrc-auxiliary": {
        "description": "Download and update Lasrc auxiliary data in ECS.",
        "name": "NASA-IMPACT/lasrc-auxiliary",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/marine_debris_ML": {
        "description": "Marine debris detection with commercial satellite imagery and deep learning.",
        "name": "NASA-IMPACT/marine_debris_ML",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/mbtileserver": {
        "description": "Basic Go server for mbtiles",
        "name": "NASA-IMPACT/mbtileserver",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/nncpp-cumulus-deploy": {
        "description": null,
        "name": "NASA-IMPACT/nncpp-cumulus-deploy",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/nncpp-dashboard-api": {
        "description": null,
        "name": "NASA-IMPACT/nncpp-dashboard-api",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/nncpp-dashboard-datasets": {
        "description": null,
        "name": "NASA-IMPACT/nncpp-dashboard-datasets",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/nncpp-earthdata-dashboard": {
        "description": null,
        "name": "NASA-IMPACT/nncpp-earthdata-dashboard",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/parameter-mapping": {
        "description": "Mapping science keywords to variables and vice versa Frontend and Backend",
        "name": "NASA-IMPACT/parameter-mapping",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/pyQuARC": {
        "description": "The pyQuARC tool reads and evaluates metadata records with a focus on the consistency and robustness of the metadata. pyQuARC flags opportunities to improve or add to contextual metadata information in order to help the user connect to relevant data products. pyQuARC also ensures that information common to both the data product and the file-level metadata are consistent and compatible. pyQuARC frees up human evaluators to make more sophisticated assessments such as whether an abstract accurately describes the data and provides the correct contextual information. The base pyQuARC package assesses descriptive metadata used to catalog Earth observation data products and files. As open source software, pyQuARC can be adapted and customized by data providers to allow for quality checks that evolve with their needs, including checking metadata not covered in base package.",
        "name": "NASA-IMPACT/pyQuARC",
        "topics": null,
        "website": ""
    },
    "NASA-IMPACT/sddo": {
        "description": null,
        "name": "NASA-IMPACT/sddo",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/space-apps": {
        "description": null,
        "name": "NASA-IMPACT/space-apps",
        "topics": null,
        "website": null
    },
    "NASA-IMPACT/titiler": {
        "description": "A dynamic Web Map tile server",
        "name": "NASA-IMPACT/titiler",
        "topics": null,
        "website": "https://developmentseed.org/titiler/"
    },
    "NASA-IMPACT/workshop_notebooks": {
        "description": "Notebooks for workshop",
        "name": "NASA-IMPACT/workshop_notebooks",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/2021-05-17-openscapes-online": {
        "description": "Software Carpentry workshop organized by Openscapes on May 17 - 19, 2021",
        "name": "NASA-Openscapes/2021-05-17-openscapes-online",
        "topics": null,
        "website": "https://virdi.github.io/2021-05-17-openscapes-online/"
    },
    "NASA-Openscapes/2021-Cloud-Clinic": {
        "description": "Pre-Hackathon Cloud Clinic - Optional",
        "name": "NASA-Openscapes/2021-Cloud-Clinic",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/2021-Cloud-Hackathon": {
        "description": "2021 NASA Cloud Hackathon co-hosted by PODAAC, NSIDC and LPDAAC, with support provided by ASDC, GESDISC, IMPACT and NASA Openscapes.  ",
        "name": "NASA-Openscapes/2021-Cloud-Hackathon",
        "topics": [
            "2021-hackweek"
        ],
        "website": "https://nasa-openscapes.github.io/2021-Cloud-Hackathon/"
    },
    "NASA-Openscapes/AGU-2020": {
        "description": "PO.DAAC & NSIDC DAAC Github repository for AGU 2020 workshop.",
        "name": "NASA-Openscapes/AGU-2020",
        "topics": null,
        "website": ""
    },
    "NASA-Openscapes/Erinsnewbook": {
        "description": "Practice jupyter book repo",
        "name": "NASA-Openscapes/Erinsnewbook",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/ICESat2_hackweek_tutorials": {
        "description": "Combined repository for final tutorial material from 2019 ICESat-2 HackWeek at the Univeristy of Washington",
        "name": "NASA-Openscapes/ICESat2_hackweek_tutorials",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/NASA-Openscapes.github.io": {
        "description": "Landing page for NASA-Openscapes",
        "name": "NASA-Openscapes/NASA-Openscapes.github.io",
        "topics": null,
        "website": "https://nasa-openscapes.github.io"
    },
    "NASA-Openscapes/NSIDC-Data-Access-Notebook": {
        "description": "A Jupyter notebook exploring data coverage, size, and customization service availability along with direct data download utilizing the NSIDC DAAC's access and service API.",
        "name": "NASA-Openscapes/NSIDC-Data-Access-Notebook",
        "topics": null,
        "website": ""
    },
    "NASA-Openscapes/NSIDC-Data-Tutorials": {
        "description": "Jupyter notebook-based tutorials to learn how to access and work with select NSIDC DAAC data.",
        "name": "NASA-Openscapes/NSIDC-Data-Tutorials",
        "topics": null,
        "website": ""
    },
    "NASA-Openscapes/R_SC_Spatial": {
        "description": "A place for lesson content for R capentries training with NASA DEVELOP ",
        "name": "NASA-Openscapes/R_SC_Spatial",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/check_github_setup": {
        "description": "A repository to check github setup and demonstrate basic git operations",
        "name": "NASA-Openscapes/check_github_setup",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/cloud_science": {
        "description": "NASA cloud science tutorials and science use cases",
        "name": "NASA-Openscapes/cloud_science",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/common": {
        "description": "Common modules/tutorials/resources for NASA DAACs",
        "name": "NASA-Openscapes/common",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/corn": {
        "description": "Jupyterhub base image for the NASA Cloud Hackweek 2021",
        "name": "NASA-Openscapes/corn",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/earthdata-cloud-cookbook": {
        "description": "A tutorial book of workflows for research using NASA EarthData in the Cloud created by the NASA-Openscapes team",
        "name": "NASA-Openscapes/earthdata-cloud-cookbook",
        "topics": null,
        "website": "https://nasa-openscapes.github.io/earthdata-cloud-cookbook"
    },
    "NASA-Openscapes/earthdata-cloud-primer-md": {
        "description": "Markdown copy of the NASA Earthdata Cloud Primer (https://earthdata.nasa.gov/learn/user-resources/webinars-and-tutorials/cloud-primer)",
        "name": "NASA-Openscapes/earthdata-cloud-primer-md",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/geospatial-python": {
        "description": "Introduction to Geospatial Raster and Vector Data with Python",
        "name": "NASA-Openscapes/geospatial-python",
        "topics": null,
        "website": "https://carpentries-incubator.github.io/geospatial-python/"
    },
    "NASA-Openscapes/hackathon-test-repo": {
        "description": "Testing to make sure hackathon participants have access",
        "name": "NASA-Openscapes/hackathon-test-repo",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/harmony-py": {
        "description": "Python client library for working with NASA\u2019s Earth observing system data using Harmony.  https://harmony.earthdata.nasa.gov",
        "name": "NASA-Openscapes/harmony-py",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/how_we_work": {
        "description": "Common practices and approaches to creating open science cloud tutorials",
        "name": "NASA-Openscapes/how_we_work",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/jupyter-tips-and-tricks": {
        "description": "Using Project Jupyter for data science.",
        "name": "NASA-Openscapes/jupyter-tips-and-tricks",
        "topics": null,
        "website": ""
    },
    "NASA-Openscapes/jupyterdays": {
        "description": "Repository for materials supporting the UBC Jupyter Days 2020 workshop.",
        "name": "NASA-Openscapes/jupyterdays",
        "topics": null,
        "website": "https://ubc-dsci.github.io/jupyterdays/"
    },
    "NASA-Openscapes/lpdaac_hls_tutorial": {
        "description": "LP DAAC HLS Data Access Tutorial",
        "name": "NASA-Openscapes/lpdaac_hls_tutorial",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/mentors-2021": {
        "description": "Demo for DAAC Mentors",
        "name": "NASA-Openscapes/mentors-2021",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/nch2021-projects-contexdata": {
        "description": null,
        "name": "NASA-Openscapes/nch2021-projects-contexdata",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/nch2021-projects-pypsicle": {
        "description": "Partial reading of icesat-2 data in the cloud",
        "name": "NASA-Openscapes/nch2021-projects-pypsicle",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/nch21-projects-counties-temp": {
        "description": "Calculate seasonal temperature averages from MERRA2 data by US county",
        "name": "NASA-Openscapes/nch21-projects-counties-temp",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/nch21-projects-countiestemp": {
        "description": "Use monthly MERRA-2 temperature, pm2.5, pm10 data (and other applicable AQ data) to extract seasonal averages for each county in the US. Calculate  seasonal averages for 2000 2010 and 2020, that is, at decadal span",
        "name": "NASA-Openscapes/nch21-projects-countiestemp",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/nhw21-projects-upwelling": {
        "description": null,
        "name": "NASA-Openscapes/nhw21-projects-upwelling",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/open-data-education": {
        "description": "Open Science Education - Pangeo",
        "name": "NASA-Openscapes/open-data-education",
        "topics": null,
        "website": ""
    },
    "NASA-Openscapes/open-geo-tutorial": {
        "description": "Tutorial of fundamental remote sensing and GIS methodologies using open source software in python",
        "name": "NASA-Openscapes/open-geo-tutorial",
        "topics": null,
        "website": ""
    },
    "NASA-Openscapes/openscapes_jupyterbook_test": {
        "description": "Deprecated; please see https://github.com/nasa-openscapes/earthdata-cloud-cookbook for current work on common NASA data tutorials and best practices",
        "name": "NASA-Openscapes/openscapes_jupyterbook_test",
        "topics": null,
        "website": ""
    },
    "NASA-Openscapes/other-tutorials": {
        "description": "Other tutorials not in github repos",
        "name": "NASA-Openscapes/other-tutorials",
        "topics": null,
        "website": null
    },
    "NASA-Openscapes/python-for-geospatial-analysis": {
        "description": "A crash course into using Python for geospatial analysis.",
        "name": "NASA-Openscapes/python-for-geospatial-analysis",
        "topics": null,
        "website": "http://www.tomasbeuzen.com/python-for-geospatial-analysis/"
    },
    "NASA-Openscapes/r-for-excel": {
        "description": "R for Excel Users Workshop",
        "name": "NASA-Openscapes/r-for-excel",
        "topics": null,
        "website": "https://rstudio-conf-2020.github.io/r-for-excel/"
    },
    "NASA-Openscapes/sample_project_repository": {
        "description": "Project template for Hackweek projects",
        "name": "NASA-Openscapes/sample_project_repository",
        "topics": [
            "2021-hackweek"
        ],
        "website": ""
    },
    "NASA-Openscapes/swcarpentry": {
        "description": "A meta-repository to help navigate the many lessons and repos of the Software Carpentry Community",
        "name": "NASA-Openscapes/swcarpentry",
        "topics": null,
        "website": "http://software-carpentry.org"
    },
    "NASA-Openscapes/workshop_notebooks": {
        "description": "Notebooks for workshop",
        "name": "NASA-Openscapes/workshop_notebooks",
        "topics": null,
        "website": null
    },
    "NASA-Tensegrity-Robotics-Toolkit/DTRLdev": {
        "description": "NTRT Development repository for members of the Dynamic Tensegrity Robotics Lab",
        "name": "NASA-Tensegrity-Robotics-Toolkit/DTRLdev",
        "topics": null,
        "website": null
    },
    "NASA-Tensegrity-Robotics-Toolkit/NTRTsim": {
        "description": "The NASA Tensegrity Robotics Toolkit Simulator, a physics based simulator to research the design and control of tensegrity robots.",
        "name": "NASA-Tensegrity-Robotics-Toolkit/NTRTsim",
        "topics": null,
        "website": null
    },
    "NASA-Tournament-Lab/CoECI-OPM-Service-Credit-Redeposit-Deposit-Application": {
        "description": "This repository houses code for the United States Office of Personnel Management Service Credit Re-deposit/Deposit (SCRD) Application.",
        "name": "NASA-Tournament-Lab/CoECI-OPM-Service-Credit-Redeposit-Deposit-Application",
        "topics": null,
        "website": null
    },
    "NASARace/race": {
        "description": "actor based framework for building event driven, distributed simulations",
        "name": "NASARace/race",
        "topics": null,
        "website": null
    },
    "NASAWorldWind/.github": {
        "description": "This GitHub organization's default community health files.",
        "name": "NASAWorldWind/.github",
        "topics": null,
        "website": null
    },
    "NASAWorldWind/NASAWorldWind.github.io": {
        "description": "This GitHub organization's GitHub Pages placeholder site",
        "name": "NASAWorldWind/NASAWorldWind.github.io",
        "topics": null,
        "website": "http://NASAWorldWind.github.io"
    },
    "NASAWorldWind/WebWorldWind": {
        "description": "The NASA WorldWind Javascript SDK (WebWW) includes the library and examples for creating geo-browser web applications and for embedding a 3D globe in HTML5 web pages.",
        "name": "NASAWorldWind/WebWorldWind",
        "topics": [
            "javascript",
            "sdk",
            "nasa",
            "worldwind",
            "3d",
            "geospatial",
            "earth",
            "webgl",
            "terrain",
            "imagery",
            "html5",
            "globe",
            "browser"
        ],
        "website": ""
    },
    "NASAWorldWind/WorldWindAndroid": {
        "description": "The NASA WorldWind Java SDK for Android (WWA) includes the library, examples and tutorials for building 3D virtual globe applications for phones and tablets.",
        "name": "NASAWorldWind/WorldWindAndroid",
        "topics": [
            "android",
            "java",
            "nasa",
            "worldwind",
            "geospatial",
            "3d",
            "sdk",
            "gradle",
            "graphics",
            "globe",
            "earth",
            "opengl-es"
        ],
        "website": ""
    },
    "NASAWorldWind/WorldWindJava": {
        "description": "The NASA WorldWind Java SDK (WWJ) is for building cross-platform 3D geospatial desktop applications in Java.",
        "name": "NASAWorldWind/WorldWindJava",
        "topics": [
            "nasa",
            "worldwind",
            "java",
            "opengl",
            "geospatial",
            "earth",
            "3d",
            "sdk",
            "terrain",
            "imagery",
            "maps",
            "globe",
            "graphics"
        ],
        "website": ""
    },
    "NASAWorldWind/WorldWindServerKit": {
        "description": "The NASA WorldWind Server Kit (WWSK) is an open source Java project that assembles GeoServer for easy distribution and implementation.",
        "name": "NASAWorldWind/WorldWindServerKit",
        "topics": [
            "nasa",
            "worldwind",
            "geoserver",
            "geopackage",
            "java",
            "maven",
            "wms",
            "wcs",
            "wfs",
            "wps",
            "maps",
            "imagery",
            "geospatial"
        ],
        "website": ""
    },
    "NeoGeographyToolkit/StereoPipeline": {
        "description": "The NASA Ames Stereo Pipeline is a suite of automated geodesy & stereogrammetry tools designed for processing planetary imagery captured from orbiting and landed robotic explorers on other planets.",
        "name": "NeoGeographyToolkit/StereoPipeline",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/CADRE": {
        "description": null,
        "name": "OpenMDAO/CADRE",
        "topics": null,
        "website": null
    },
    "OpenMDAO/EGADS": {
        "description": null,
        "name": "OpenMDAO/EGADS",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/EngSketchPad": {
        "description": null,
        "name": "OpenMDAO/EngSketchPad",
        "topics": null,
        "website": null
    },
    "OpenMDAO/GEM": {
        "description": null,
        "name": "OpenMDAO/GEM",
        "topics": null,
        "website": null
    },
    "OpenMDAO/MBI": {
        "description": null,
        "name": "OpenMDAO/MBI",
        "topics": null,
        "website": null
    },
    "OpenMDAO/NAS_Access": {
        "description": "An ExternalComponent that wraps and runs code on NASA's NAS Pleiades supercomputer. You must have an account on Pleiades to make use of this.",
        "name": "OpenMDAO/NAS_Access",
        "topics": null,
        "website": null
    },
    "OpenMDAO/NRELTraining": {
        "description": "An old problem used for NREL Training, converted to OpenMDAO 1.x",
        "name": "OpenMDAO/NRELTraining",
        "topics": null,
        "website": null
    },
    "OpenMDAO/Open-Source-Catalog": {
        "description": "contains the NASA open source software catalog for automatic deployment to code.nasa.gov",
        "name": "OpenMDAO/Open-Source-Catalog",
        "topics": null,
        "website": null
    },
    "OpenMDAO/OpenMDAO": {
        "description": "OpenMDAO repository. ",
        "name": "OpenMDAO/OpenMDAO",
        "topics": [
            "nasa",
            "open-source",
            "framework",
            "openmdao",
            "optimization"
        ],
        "website": "http://openmdao.org"
    },
    "OpenMDAO/OpenMDAO-Framework": {
        "description": "A python based open-source (Apache 2.0) engineering analysis framework designed to facilitate the use of MDAO.  To add issues, visit our user forums at http://www.openmdao.org/forum .  NOTE: this version is no longer being developed.  The current active version can be found here: https://github.com/OpenMDAO/OpenMDAO.",
        "name": "OpenMDAO/OpenMDAO-Framework",
        "topics": null,
        "website": "http://openmdao.org"
    },
    "OpenMDAO/OpenMDAO-Procedures": {
        "description": "Procedures for OpenMDAO maintainers",
        "name": "OpenMDAO/OpenMDAO-Procedures",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/OpenMDAO1": {
        "description": "OpenMDAO is a high-performance computing platform for systems analysis and optimization that enables you to decompose your models, making them easier to build and maintain, while still solving them in a tightly-coupled manner with efficient parallel numerical methods.",
        "name": "OpenMDAO/OpenMDAO1",
        "topics": null,
        "website": "http://openmdao.org"
    },
    "OpenMDAO/OpenMDAO_Book": {
        "description": null,
        "name": "OpenMDAO/OpenMDAO_Book",
        "topics": null,
        "website": null
    },
    "OpenMDAO/POEMs": {
        "description": "Proposals for OpenMDAO Enhancements",
        "name": "OpenMDAO/POEMs",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/RevHack2020": {
        "description": "OpenMDAO 2020 Reverse Hackathon ",
        "name": "OpenMDAO/RevHack2020",
        "topics": null,
        "website": null
    },
    "OpenMDAO/SimplePylab": {
        "description": "Simple script to create virtual environment with numpy, scipy, matplotlib and ipython.",
        "name": "OpenMDAO/SimplePylab",
        "topics": null,
        "website": null
    },
    "OpenMDAO/airline-allocation": {
        "description": "airline allocation problem",
        "name": "OpenMDAO/airline-allocation",
        "topics": null,
        "website": null
    },
    "OpenMDAO/benchmark": {
        "description": "Prototype of a benchmarking/regression tool.",
        "name": "OpenMDAO/benchmark",
        "topics": null,
        "website": null
    },
    "OpenMDAO/build_pyoptsparse": {
        "description": "bash script to build/install pyoptsparse with Ipopt (and optionally SNOPT)",
        "name": "OpenMDAO/build_pyoptsparse",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/dymos": {
        "description": "Open Source Optimization of Dynamic Multidisciplinary Systems",
        "name": "OpenMDAO/dymos",
        "topics": [
            "nasa",
            "optimal-control",
            "trajectory-optimization",
            "pseudospectral",
            "openmdao",
            "co-design"
        ],
        "website": ""
    },
    "OpenMDAO/dymos_training": {
        "description": "Training resources for Dymos",
        "name": "OpenMDAO/dymos_training",
        "topics": null,
        "website": null
    },
    "OpenMDAO/extcode_folder_names": {
        "description": "How to set run directories for OpenMDAO external code components ",
        "name": "OpenMDAO/extcode_folder_names",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/flops_wrapper": {
        "description": "OpenMDAO component wrapper for FLOPS",
        "name": "OpenMDAO/flops_wrapper",
        "topics": null,
        "website": null
    },
    "OpenMDAO/lectures": {
        "description": "Lectures on various topics having to do with Optimization in general and OpenMDAO in particular",
        "name": "OpenMDAO/lectures",
        "topics": null,
        "website": null
    },
    "OpenMDAO/library_template": {
        "description": "A structure that can be a starting point for developers who want to create projects that depend on OpenMDAO.",
        "name": "OpenMDAO/library_template",
        "topics": null,
        "website": null
    },
    "OpenMDAO/marathon-aircraft": {
        "description": "Aero-Velo Marathon Aircraft",
        "name": "OpenMDAO/marathon-aircraft",
        "topics": null,
        "website": null
    },
    "OpenMDAO/openmdao_testapp": {
        "description": "Web app to manage openmdao automated testing",
        "name": "OpenMDAO/openmdao_testapp",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/openmdao_training": {
        "description": null,
        "name": "OpenMDAO/openmdao_training",
        "topics": null,
        "website": null
    },
    "OpenMDAO/ovis": {
        "description": "Prototype OpenMDAO Model Visualization and data plotting tool",
        "name": "OpenMDAO/ovis",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/pandemic": {
        "description": "Python based dynamical optimization of a pandemic disease model",
        "name": "OpenMDAO/pandemic",
        "topics": null,
        "website": ""
    },
    "OpenMDAO/publication_bibs": {
        "description": "bib files for all OpenMDAO relevant publications",
        "name": "OpenMDAO/publication_bibs",
        "topics": null,
        "website": null
    },
    "OpenMDAO/pyCycle": {
        "description": "Thermodynamic cycle modeling library, built on top of OpenMDAO",
        "name": "OpenMDAO/pyCycle",
        "topics": null,
        "website": null
    },
    "OpenMDAO/pyV3D": {
        "description": "python web-based geometry viewer",
        "name": "OpenMDAO/pyV3D",
        "topics": null,
        "website": null
    },
    "OpenMDAO/pygem": {
        "description": "python wrappers for the GEM libraries diamond and quartz",
        "name": "OpenMDAO/pygem",
        "topics": null,
        "website": null
    },
    "OpenMDAO/testflo": {
        "description": "A simple python testing framework that can run unit tests under MPI (or not).",
        "name": "OpenMDAO/testflo",
        "topics": null,
        "website": ""
    },
    "Starlink/starjava": {
        "description": "Java applications initially developed for the Starlink Project but now developed independently",
        "name": "Starlink/starjava",
        "topics": [
            "java",
            "astronomy"
        ],
        "website": null
    },
    "WorldWindEarth/explorer": {
        "description": "WorldWindExplorer: A 3D virtual globe geo-browser app framework based on WorldWindJS, Bootstrap and KnockoutJS. Includes 3D globe and 2D map projections, imagery, terrain, markers, plus solar and celestial data.",
        "name": "WorldWindEarth/explorer",
        "topics": [
            "nasa",
            "worldwind",
            "explorer",
            "globe",
            "imagery",
            "terrain",
            "maps",
            "3d",
            "earth",
            "weather-forecast",
            "esa"
        ],
        "website": "https://worldwind.earth/explorer"
    },
    "WorldWindLabs/AgroSphere": {
        "description": "An educational web application that visualizes the effects of climate change on agriculture using a large collection of global agriculture and weather station data.",
        "name": "WorldWindLabs/AgroSphere",
        "topics": [
            "nasa",
            "agriculture",
            "weather",
            "nasa-ames",
            "climate",
            "globe",
            "atmosphere",
            "weather-data"
        ],
        "website": "https://worldwind.arc.nasa.gov/agrosphere/"
    },
    "WorldWindLabs/CitySmart": {
        "description": "Open framework for urban infrastructure management",
        "name": "WorldWindLabs/CitySmart",
        "topics": null,
        "website": null
    },
    "WorldWindLabs/EarthquakeApp": {
        "description": "Earthquake Signal Precursors, ESP, detection and forecast",
        "name": "WorldWindLabs/EarthquakeApp",
        "topics": null,
        "website": ""
    },
    "WorldWindLabs/SpaceBirds": {
        "description": "Satellite Tracker",
        "name": "WorldWindLabs/SpaceBirds",
        "topics": null,
        "website": null
    },
    "WorldWindLabs/WorldWeather": {
        "description": "The largest three-dimensional web-based interactive browser of satellite, weather, climate, and other time-aware geospatial data on the web, built upon NASA's revolutionary WorldWind technology.",
        "name": "WorldWindLabs/WorldWeather",
        "topics": [
            "weather",
            "nasa",
            "climate",
            "satellite",
            "weather-forecast",
            "earth",
            "aware-geospatial-data",
            "nasa-revolutionary",
            "wind"
        ],
        "website": "http://worldwind.arc.nasa.gov/worldweather/"
    },
    "alotau/dwsolver": {
        "description": "Implementation of Dantzig-Wolfe decomposition built on GLPK.",
        "name": "alotau/dwsolver",
        "topics": null,
        "website": ""
    },
    "apache/climate": {
        "description": "Mirror of Apache Open Climate Workbench",
        "name": "apache/climate",
        "topics": [
            "climate"
        ],
        "website": null
    },
    "astrogo/cfitsio": {
        "description": "Naive CGo bindings for ``FITSIO``.",
        "name": "astrogo/cfitsio",
        "topics": null,
        "website": null
    },
    "astrogo/fitsio": {
        "description": "fitsio is a pure-Go package to read and write `FITS` files",
        "name": "astrogo/fitsio",
        "topics": [
            "hep",
            "astronomy",
            "astrophysics",
            "fitsio",
            "go",
            "golang",
            "io",
            "cosmology"
        ],
        "website": null
    },
    "astrojs/fitsjs": {
        "description": "JavaScript library for reading the FITS astronomical format.  Functionality includes reading of images, data cubes, compressed images, binary and ascii tables.",
        "name": "astrojs/fitsjs",
        "topics": null,
        "website": "http://astrojs.github.io/fitsjs/"
    },
    "barentsen/k2mosaic": {
        "description": "Mosaic Target Pixel Files (TPFs) obtained by NASA's Kepler/K2 missions into CCD-sized images and movies.",
        "name": "barentsen/k2mosaic",
        "topics": null,
        "website": "http://k2mosaic.geert.io"
    },
    "bruffridge/nasawds": {
        "description": "The NASA Web Design System helps NASA build fast, accessible, mobile-friendly websites.",
        "name": "bruffridge/nasawds",
        "topics": null,
        "website": ""
    },
    "cboshuizen/AXCS": {
        "description": "Autonomous eXplorer Control System",
        "name": "cboshuizen/AXCS",
        "topics": null,
        "website": ""
    },
    "dataplumber/edge": {
        "description": "The Extensible Data Gateway Environment implemented the opensearh specification and provides metadata standard translation.  It currently supports opensearch (XML and JSON), ISO-19115, GCMD, and DIFF standards.",
        "name": "dataplumber/edge",
        "topics": null,
        "website": null
    },
    "dfm/ketu": {
        "description": "I can haz planetz?",
        "name": "dfm/ketu",
        "topics": null,
        "website": ""
    },
    "ericmandel/funtools": {
        "description": "a \"minimal buy-in\" FITS library and utility package for astronomical data analysis",
        "name": "ericmandel/funtools",
        "topics": null,
        "website": ""
    },
    "esheldon/fitsio": {
        "description": "A python package for FITS input/output wrapping cfitsio",
        "name": "esheldon/fitsio",
        "topics": [
            "python",
            "cfitsio",
            "astrophysics",
            "astronomy"
        ],
        "website": ""
    },
    "geocam/geocamShare": {
        "description": "Web app for sharing geotagged photos and other geospatial data",
        "name": "geocam/geocamShare",
        "topics": null,
        "website": "http://disastercam.blogspot.com/"
    },
    "hpparvi/opents": {
        "description": "Open exoplanet transit search pipeline",
        "name": "hpparvi/opents",
        "topics": [
            "exoplanets",
            "tess",
            "kepler",
            "k2",
            "transiting-exoplanets",
            "transiting-planets",
            "astronomy"
        ],
        "website": ""
    },
    "kleb/nasarb": {
        "description": "NASA Ruby",
        "name": "kleb/nasarb",
        "topics": null,
        "website": ""
    },
    "kmader/ccgeom": {
        "description": "Taken from CodeForge http://www.codeforge.com/article/197089 ",
        "name": "kmader/ccgeom",
        "topics": null,
        "website": null
    },
    "mrtommyb/ktransit": {
        "description": "A simple exoplanet transit modeling tool in python",
        "name": "mrtommyb/ktransit",
        "topics": null,
        "website": ""
    },
    "nasa-gibs/TileStache": {
        "description": "A stylish alternative for caching your map tiles.",
        "name": "nasa-gibs/TileStache",
        "topics": null,
        "website": "http://tilestache.org"
    },
    "nasa-gibs/cumulus-message-adapter": {
        "description": "A command-line interface for preparing and outputting Cumulus Messages for Cumulus Tasks",
        "name": "nasa-gibs/cumulus-message-adapter",
        "topics": null,
        "website": ""
    },
    "nasa-gibs/daisy": {
        "description": "DAta to Image SYstem (DAISY) prototype web clients",
        "name": "nasa-gibs/daisy",
        "topics": null,
        "website": null
    },
    "nasa-gibs/data-curtains": {
        "description": "Exploring data curtains using Cesium",
        "name": "nasa-gibs/data-curtains",
        "topics": null,
        "website": null
    },
    "nasa-gibs/gibs-api-docs": {
        "description": null,
        "name": "nasa-gibs/gibs-api-docs",
        "topics": null,
        "website": null
    },
    "nasa-gibs/gibs-ml": {
        "description": " Machine learning for anomaly detection in Global Imagery Browse Services (GIBS) Earth satellite imagery.",
        "name": "nasa-gibs/gibs-ml",
        "topics": null,
        "website": null
    },
    "nasa-gibs/gibs-unity-examples": {
        "description": "Examples of using GIBS in Unity in various ways",
        "name": "nasa-gibs/gibs-unity-examples",
        "topics": null,
        "website": null
    },
    "nasa-gibs/gibs-validation-slackbot": {
        "description": "Slack Bot for validating data in GIBS Earth Satellite Imagery. ",
        "name": "nasa-gibs/gibs-validation-slackbot",
        "topics": null,
        "website": null
    },
    "nasa-gibs/gibs-web-examples": {
        "description": "Examples of using GIBS with various web mapping libraries",
        "name": "nasa-gibs/gibs-web-examples",
        "topics": null,
        "website": null
    },
    "nasa-gibs/gifshot": {
        "description": "  JavaScript library that can create animated GIFs from media streams, videos, or images",
        "name": "nasa-gibs/gifshot",
        "topics": null,
        "website": "http://yahoo.github.io/gifshot/"
    },
    "nasa-gibs/gpu-data-to-image": {
        "description": "A GPU-accelerated image generation toolkit for building image tiles and MRF files on-demand from Earth science data",
        "name": "nasa-gibs/gpu-data-to-image",
        "topics": null,
        "website": null
    },
    "nasa-gibs/joyride": {
        "description": "jQuery feature tour plugin.",
        "name": "nasa-gibs/joyride",
        "topics": null,
        "website": "http://www.zurb.com/playground/jquery-joyride-feature-tour-plugin"
    },
    "nasa-gibs/mod_mrf": {
        "description": "An apache httpd tile handler from a MRF",
        "name": "nasa-gibs/mod_mrf",
        "topics": null,
        "website": ""
    },
    "nasa-gibs/mod_receive": {
        "description": "An apache httpd filter module that captures the response.  Useful for looking at subrequest responses for example.",
        "name": "nasa-gibs/mod_receive",
        "topics": null,
        "website": null
    },
    "nasa-gibs/mod_reproject": {
        "description": "An apache module that converts a geospatial tile service from one projection and tiling grid to another, on the fly",
        "name": "nasa-gibs/mod_reproject",
        "topics": null,
        "website": null
    },
    "nasa-gibs/mod_twms": {
        "description": "An apache httpd module converting tiledWMS requests to the REST M/L/R/C encoding",
        "name": "nasa-gibs/mod_twms",
        "topics": null,
        "website": null
    },
    "nasa-gibs/mrf": {
        "description": "GDAL-compatible file format driver designed for fast access to imagery",
        "name": "nasa-gibs/mrf",
        "topics": null,
        "website": ""
    },
    "nasa-gibs/ol3": {
        "description": "OpenLayers 3",
        "name": "nasa-gibs/ol3",
        "topics": null,
        "website": "http://openlayers.org"
    },
    "nasa-gibs/onearth": {
        "description": "High-performance web services for tiled raster imagery and vector tiles",
        "name": "nasa-gibs/onearth",
        "topics": null,
        "website": ""
    },
    "nasa-gibs/onearth-boxes": {
        "description": "OnEarth VM",
        "name": "nasa-gibs/onearth-boxes",
        "topics": null,
        "website": ""
    },
    "nasa-gibs/onearth-image-analytics": {
        "description": "An image server providing on-demand analytics/resampling of OnEarth imagery. ",
        "name": "nasa-gibs/onearth-image-analytics",
        "topics": null,
        "website": null
    },
    "nasa-gibs/redux-location-state": {
        "description": "Utilities for reading & writing Redux store state to & from the URL",
        "name": "nasa-gibs/redux-location-state",
        "topics": null,
        "website": "https://spotify.github.io/redux-location-state/"
    },
    "nasa-gibs/reference-layer-styles": {
        "description": "Reference Layer Styles (e.g. Coastlines, Admin Boundaries, Roads)",
        "name": "nasa-gibs/reference-layer-styles",
        "topics": null,
        "website": null
    },
    "nasa-gibs/tie": {
        "description": "(DEPRECATED) The Imagery Exchange is the data management and workflow system for imagery capturing and generation",
        "name": "nasa-gibs/tie",
        "topics": null,
        "website": ""
    },
    "nasa-gibs/trufflehog-actions-scan": {
        "description": "Scan repository for secrets with basic defaults in place for easy setup.",
        "name": "nasa-gibs/trufflehog-actions-scan",
        "topics": null,
        "website": null
    },
    "nasa-gibs/worldview": {
        "description": "Interactive interface for browsing global, full-resolution satellite imagery",
        "name": "nasa-gibs/worldview",
        "topics": [
            "satellite-imagery",
            "data-visualization",
            "web-mapping",
            "nasa",
            "nasa-gibs",
            "earth-science",
            "hacktoberfest"
        ],
        "website": "https://worldview.earthdata.nasa.gov/"
    },
    "nasa-gibs/worldview-ar": {
        "description": "Augmented Reality (AR) prototype to view Earth imagery",
        "name": "nasa-gibs/worldview-ar",
        "topics": null,
        "website": null
    },
    "nasa-gibs/worldview-components": {
        "description": "Modular components used with NASA Worldview",
        "name": "nasa-gibs/worldview-components",
        "topics": [
            "deprecated",
            "archived"
        ],
        "website": ""
    },
    "nasa-gibs/worldview-design": {
        "description": "Wireframes and designs for NASA Worldview",
        "name": "nasa-gibs/worldview-design",
        "topics": null,
        "website": null
    },
    "nasa-gibs/worldview-options-eosdis": {
        "description": "Configuration and branding for NASA EOSDIS Worldview",
        "name": "nasa-gibs/worldview-options-eosdis",
        "topics": null,
        "website": null
    },
    "nasa-gibs/worldview-options-template": {
        "description": "Generic branding with basic configuration",
        "name": "nasa-gibs/worldview-options-template",
        "topics": null,
        "website": null
    },
    "nasa-jpl/.github": {
        "description": null,
        "name": "nasa-jpl/.github",
        "topics": null,
        "website": null
    },
    "nasa-jpl/ASSESS": {
        "description": "Automatic Semantic Search Engine for Suitable Standards",
        "name": "nasa-jpl/ASSESS",
        "topics": null,
        "website": null
    },
    "nasa-jpl/COVID-19-papr": {
        "description": "JPL Designed Powered Air-Purifying Respirator (PAPR)",
        "name": "nasa-jpl/COVID-19-papr",
        "topics": [
            "nasa",
            "masks",
            "3d-printing",
            "jpl",
            "stl-files",
            "respiration",
            "3d",
            "ppe",
            "nasajpl",
            "stl-models",
            "covid-19",
            "covid19",
            "covid-virus",
            "personal-protective-equipment",
            "respirator-ppe"
        ],
        "website": ""
    },
    "nasa-jpl/COVID-19-respirators": {
        "description": "JPL designed 3D and tested printed respirators to help with the COVID-19 pandemic response.",
        "name": "nasa-jpl/COVID-19-respirators",
        "topics": [
            "covid-19",
            "covid19",
            "covid-virus",
            "3d",
            "3d-printing",
            "ppe",
            "protective",
            "personal-protective-equipment",
            "masks",
            "stl-files",
            "stl-models",
            "respirator",
            "respirator-ppe",
            "respiration",
            "nasa",
            "nasajpl",
            "jpl"
        ],
        "website": null
    },
    "nasa-jpl/Cassini_RADAR_Software": {
        "description": "Public release of Cassini SAR processor, preprocessor, and topography from SAR processor.",
        "name": "nasa-jpl/Cassini_RADAR_Software",
        "topics": null,
        "website": null
    },
    "nasa-jpl/LiveViewLegacy": {
        "description": "Real-time tools for Imaging Spectroscopy Data",
        "name": "nasa-jpl/LiveViewLegacy",
        "topics": [
            "spectroscopy",
            "cuda",
            "camera",
            "cameralink",
            "aviris",
            "hyperspectral-data",
            "hyperspectral",
            "hyperspectral-analysis"
        ],
        "website": null
    },
    "nasa-jpl/LiveViewOpenSource": {
        "description": "Open Source real-time visualization tools for Imaging Spectrometer development",
        "name": "nasa-jpl/LiveViewOpenSource",
        "topics": [
            "spectroscopy",
            "opencl",
            "cameralink",
            "aviris",
            "hyperspectral",
            "hyperspectral-data",
            "hyperspectral-analysis"
        ],
        "website": null
    },
    "nasa-jpl/Pulse": {
        "description": "A pendant to warn you when you touch your face",
        "name": "nasa-jpl/Pulse",
        "topics": [
            "covid-19",
            "covid19",
            "covid-virus",
            "3d",
            "3d-printing",
            "3d-models",
            "electonics",
            "electrical-engineering",
            "mechatronics",
            "pendant",
            "face",
            "ir-sensor",
            "motor",
            "protective",
            "ppe",
            "personal-protective-equipment",
            "jpl",
            "caltech",
            "nasa",
            "nasa-jpl"
        ],
        "website": null
    },
    "nasa-jpl/SPOC": {
        "description": "A website showcasing SPOC (Soil Property and Object Classification), a deep learning-based terrain classifier for Mars rovers",
        "name": "nasa-jpl/SPOC",
        "topics": null,
        "website": null
    },
    "nasa-jpl/Waveport": {
        "description": "Waveport Scattering Library",
        "name": "nasa-jpl/Waveport",
        "topics": null,
        "website": null
    },
    "nasa-jpl/amazon-ssm-agent": {
        "description": "Agent to enable remote management of your Amazon EC2 instance configuration.",
        "name": "nasa-jpl/amazon-ssm-agent",
        "topics": null,
        "website": "https://aws.amazon.com/ec2/run-command"
    },
    "nasa-jpl/autoRIFT": {
        "description": "A Python module of a fast and intelligent algorithm for finding the pixel displacement between two images",
        "name": "nasa-jpl/autoRIFT",
        "topics": null,
        "website": ""
    },
    "nasa-jpl/design-challenge-multiphysics": {
        "description": "Optical instrument design challenge",
        "name": "nasa-jpl/design-challenge-multiphysics",
        "topics": null,
        "website": null
    },
    "nasa-jpl/example-site": {
        "description": "An example of a GitHub.io Project site in the nasa-jpl Organization",
        "name": "nasa-jpl/example-site",
        "topics": null,
        "website": null
    },
    "nasa-jpl/fastcat": {
        "description": "C++ EtherCAT Device Command & Control Library",
        "name": "nasa-jpl/fastcat",
        "topics": null,
        "website": null
    },
    "nasa-jpl/fcat": {
        "description": "FCAT ROS2 Node ",
        "name": "nasa-jpl/fcat",
        "topics": null,
        "website": null
    },
    "nasa-jpl/fcat_msgs": {
        "description": "ROS2 Message Definitions for FCAT node",
        "name": "nasa-jpl/fcat_msgs",
        "topics": null,
        "website": null
    },
    "nasa-jpl/itslive": {
        "description": "A NASA MEaSUREs project to provide automated, low latency, global glacier flow and elevation change datasets",
        "name": "nasa-jpl/itslive",
        "topics": null,
        "website": null
    },
    "nasa-jpl/itslive-explorer": {
        "description": null,
        "name": "nasa-jpl/itslive-explorer",
        "topics": null,
        "website": null
    },
    "nasa-jpl/itslive-projects": {
        "description": null,
        "name": "nasa-jpl/itslive-projects",
        "topics": null,
        "website": null
    },
    "nasa-jpl/jsd": {
        "description": "Just SOEM Drivers",
        "name": "nasa-jpl/jsd",
        "topics": null,
        "website": null
    },
    "nasa-jpl/lowfssim": {
        "description": "Roman-CGI optical model of LOWFS",
        "name": "nasa-jpl/lowfssim",
        "topics": null,
        "website": null
    },
    "nasa-jpl/nasa-jpl.github.io": {
        "description": null,
        "name": "nasa-jpl/nasa-jpl.github.io",
        "topics": null,
        "website": "https://nasa-jpl.github.io"
    },
    "nasa-jpl/ngdcs": {
        "description": "NGDCS Imaging Spectroscopy Airborne Flight Computer Code",
        "name": "nasa-jpl/ngdcs",
        "topics": null,
        "website": null
    },
    "nasa-jpl/ocean-model-interfaces": {
        "description": "C++ interfaces that provide access to ocean model data sets.",
        "name": "nasa-jpl/ocean-model-interfaces",
        "topics": null,
        "website": null
    },
    "nasa-jpl/open-source-rover": {
        "description": "A build-it-yourself, 6-wheel rover based on the rovers on Mars!",
        "name": "nasa-jpl/open-source-rover",
        "topics": [
            "mars-rover",
            "mars",
            "robotics",
            "robot"
        ],
        "website": "https://opensourcerover.jpl.nasa.gov"
    },
    "nasa-jpl/osr-android-app": {
        "description": "Android application used to control the Open Source Rover",
        "name": "nasa-jpl/osr-android-app",
        "topics": null,
        "website": null
    },
    "nasa-jpl/osr-rover-code": {
        "description": "Code that runs on the Open Source Rover",
        "name": "nasa-jpl/osr-rover-code",
        "topics": null,
        "website": null
    },
    "nasa-jpl/spoc_lite": {
        "description": "A light-weight, experimental terrain classifier for Mars rovers",
        "name": "nasa-jpl/spoc_lite",
        "topics": null,
        "website": null
    },
    "nasa-jpl/sstmp": {
        "description": "Solar System Treks Mosaic Pipeline",
        "name": "nasa-jpl/sstmp",
        "topics": null,
        "website": null
    },
    "nasa-jpl/transfer-this-to-nasa-jpl": {
        "description": "This is a test repository that we're going to transfer to the nasa-jpl organization",
        "name": "nasa-jpl/transfer-this-to-nasa-jpl",
        "topics": null,
        "website": null
    },
    "nasa-petal/PeTaL": {
        "description": "Artificial Intelligence and Natural System Design Tool",
        "name": "nasa-petal/PeTaL",
        "topics": null,
        "website": "https://nasa-petal.github.io/PeTaL/"
    },
    "nasa/1d-pinn-reconstruction": {
        "description": "This is the code for \"Neural Network Reconstruction of Plasma Space-Time\" by C.Bard and J.Dorelli (DOI: 10.3389/fspas.2021.732275). It is a Physics-Informed Transformer Neural Network which was used to reconstruct one-dimensional (M)HD shocktubes from partial samples. Includes source code, data, and jupyter notebooks for scientific reproduction",
        "name": "nasa/1d-pinn-reconstruction",
        "topics": null,
        "website": null
    },
    "nasa/ACCoRD": {
        "description": null,
        "name": "nasa/ACCoRD",
        "topics": null,
        "website": null
    },
    "nasa/ADOPT": {
        "description": "Automatic Discovery of Precursors in Time Series Data (ADOPT)",
        "name": "nasa/ADOPT",
        "topics": null,
        "website": null
    },
    "nasa/AGTF30": {
        "description": null,
        "name": "nasa/AGTF30",
        "topics": null,
        "website": null
    },
    "nasa/ARC-SGE-interns-19": {
        "description": null,
        "name": "nasa/ARC-SGE-interns-19",
        "topics": null,
        "website": null
    },
    "nasa/ASDC_Data_and_User_Services": {
        "description": null,
        "name": "nasa/ASDC_Data_and_User_Services",
        "topics": null,
        "website": null
    },
    "nasa/Analysis_SDK": {
        "description": null,
        "name": "nasa/Analysis_SDK",
        "topics": null,
        "website": null
    },
    "nasa/AprilNav": {
        "description": null,
        "name": "nasa/AprilNav",
        "topics": null,
        "website": null
    },
    "nasa/BrightComets": {
        "description": null,
        "name": "nasa/BrightComets",
        "topics": null,
        "website": null
    },
    "nasa/CARA_Analysis_Tools": {
        "description": null,
        "name": "nasa/CARA_Analysis_Tools",
        "topics": null,
        "website": null
    },
    "nasa/CCDD": {
        "description": "CFS Command and Data Dictionary Tool (CCDDT)",
        "name": "nasa/CCDD",
        "topics": null,
        "website": null
    },
    "nasa/CCSDS-MAL-Http-Binding-Xml-Encoding": {
        "description": null,
        "name": "nasa/CCSDS-MAL-Http-Binding-Xml-Encoding",
        "topics": null,
        "website": null
    },
    "nasa/CF": {
        "description": "The Core Flight System (cFS) CFDP application.",
        "name": "nasa/CF",
        "topics": null,
        "website": ""
    },
    "nasa/CFL3D": {
        "description": null,
        "name": "nasa/CFL3D",
        "topics": null,
        "website": null
    },
    "nasa/CFS-101": {
        "description": null,
        "name": "nasa/CFS-101",
        "topics": null,
        "website": null
    },
    "nasa/CFS_CI": {
        "description": null,
        "name": "nasa/CFS_CI",
        "topics": null,
        "website": null
    },
    "nasa/CFS_IO_LIB": {
        "description": null,
        "name": "nasa/CFS_IO_LIB",
        "topics": null,
        "website": null
    },
    "nasa/CFS_TO": {
        "description": null,
        "name": "nasa/CFS_TO",
        "topics": null,
        "website": null
    },
    "nasa/COTS-Star-Tracker": {
        "description": null,
        "name": "nasa/COTS-Star-Tracker",
        "topics": null,
        "website": null
    },
    "nasa/CPB": {
        "description": "Conflict Prevention Bands",
        "name": "nasa/CPB",
        "topics": null,
        "website": null
    },
    "nasa/CS": {
        "description": "The Core Flight System (cFS) Checksum (CS) application.",
        "name": "nasa/CS",
        "topics": null,
        "website": ""
    },
    "nasa/CTF": {
        "description": "This is a new repository for a new tool to be added to the cFS ecosystem called cFS Test Framework (CTF).",
        "name": "nasa/CTF",
        "topics": null,
        "website": null
    },
    "nasa/CTT": {
        "description": "Contact Tracing and Tracking",
        "name": "nasa/CTT",
        "topics": null,
        "website": ""
    },
    "nasa/CertWare": {
        "description": null,
        "name": "nasa/CertWare",
        "topics": null,
        "website": ""
    },
    "nasa/Common-Metadata-Repository": {
        "description": null,
        "name": "nasa/Common-Metadata-Repository",
        "topics": [
            "common-metadata-repository",
            "eosdis"
        ],
        "website": null
    },
    "nasa/CompDam_DGD": {
        "description": null,
        "name": "nasa/CompDam_DGD",
        "topics": null,
        "website": null
    },
    "nasa/Computational-Materials-Miniapp1": {
        "description": null,
        "name": "nasa/Computational-Materials-Miniapp1",
        "topics": null,
        "website": null
    },
    "nasa/Coordinate-systems-class-library": {
        "description": null,
        "name": "nasa/Coordinate-systems-class-library",
        "topics": null,
        "website": null
    },
    "nasa/CrisisMappingToolkit": {
        "description": "NASA Ames Crisis Mapping Toolkit",
        "name": "nasa/CrisisMappingToolkit",
        "topics": null,
        "website": null
    },
    "nasa/CryptoLib": {
        "description": "Provide a software-only solution using the CCSDS Space Data Link Security Protocol - Extended Procedures (SDLS-EP) to secure communications between a spacecraft running the core Flight System (cFS) and a ground station.",
        "name": "nasa/CryptoLib",
        "topics": [
            "sdls-ep",
            "space-data-link-security-protocol",
            "ccsds",
            "spack-data-link",
            "data-link",
            "communications",
            "cfs",
            "ground-station",
            "space-communications",
            "space-network"
        ],
        "website": ""
    },
    "nasa/DAVEtools": {
        "description": "A Java package, nominally built in NetBeans, that allows use of DAVE-ML simulation models within tools such as Mathwork's Simulink(R) and Matlab(R) products",
        "name": "nasa/DAVEtools",
        "topics": [
            "test1",
            "test2"
        ],
        "website": "http://www.daveml.org"
    },
    "nasa/DERT": {
        "description": "DERT is an open source software tool for exploring NASA's digital terrain models in 3D",
        "name": "nasa/DERT",
        "topics": null,
        "website": ""
    },
    "nasa/DON-Federate-HLA2MPC": {
        "description": null,
        "name": "nasa/DON-Federate-HLA2MPC",
        "topics": null,
        "website": null
    },
    "nasa/DS": {
        "description": "The Core Flight System (cFS) Data Storage (DS) application.",
        "name": "nasa/DS",
        "topics": null,
        "website": ""
    },
    "nasa/DTN-Network-Monitoring": {
        "description": null,
        "name": "nasa/DTN-Network-Monitoring",
        "topics": null,
        "website": null
    },
    "nasa/DTNME": {
        "description": null,
        "name": "nasa/DTNME",
        "topics": null,
        "website": null
    },
    "nasa/DdsJs": {
        "description": null,
        "name": "nasa/DdsJs",
        "topics": null,
        "website": null
    },
    "nasa/DualPol": {
        "description": "Python Interface to Dual-Pol Radar Algorithms (DualPol)",
        "name": "nasa/DualPol",
        "topics": null,
        "website": null
    },
    "nasa/EADINLite": {
        "description": "EADIN_Lite Network Protocol",
        "name": "nasa/EADINLite",
        "topics": null,
        "website": null
    },
    "nasa/ECI": {
        "description": "CFS application framework for integrating external C code into the CFS environment",
        "name": "nasa/ECI",
        "topics": null,
        "website": "https://nasa.github.io/ECI/"
    },
    "nasa/EMTAT": {
        "description": null,
        "name": "nasa/EMTAT",
        "topics": null,
        "website": null
    },
    "nasa/EMTG": {
        "description": "NASA Goddard's Evolutionary Mission Trajectory Generator (EMTG)",
        "name": "nasa/EMTG",
        "topics": null,
        "website": null
    },
    "nasa/ESPRESSO": {
        "description": null,
        "name": "nasa/ESPRESSO",
        "topics": null,
        "website": null
    },
    "nasa/EdsLib": {
        "description": "CCSDS SOIS Electronic Data Sheet Tool and Library",
        "name": "nasa/EdsLib",
        "topics": null,
        "website": ""
    },
    "nasa/FEI": {
        "description": null,
        "name": "nasa/FEI",
        "topics": null,
        "website": null
    },
    "nasa/FM": {
        "description": "The Core Flight System (cFS) File Manager (FM) application.",
        "name": "nasa/FM",
        "topics": null,
        "website": ""
    },
    "nasa/FPRoCK": {
        "description": "FPRoCK is a software library for checking satisfiability of a set of mixed real and floating-point constraints. If this set of constraints has at least one solution, it returns one of the solutions, otherwise it returns UNSAT indicating that the set is unsatisfiable.",
        "name": "nasa/FPRoCK",
        "topics": null,
        "website": ""
    },
    "nasa/Field-Data-Collector": {
        "description": null,
        "name": "nasa/Field-Data-Collector",
        "topics": null,
        "website": null
    },
    "nasa/GFR": {
        "description": "GFR (Glenn Flux Reconstruction) software (LEW-19709-1) has been approved for an open source release",
        "name": "nasa/GFR",
        "topics": null,
        "website": null
    },
    "nasa/GMSEC_API": {
        "description": null,
        "name": "nasa/GMSEC_API",
        "topics": null,
        "website": null
    },
    "nasa/GPU_SDR": {
        "description": null,
        "name": "nasa/GPU_SDR",
        "topics": null,
        "website": null
    },
    "nasa/GSAP": {
        "description": "Generic Software Architecture for Prognostics (GSAP)",
        "name": "nasa/GSAP",
        "topics": null,
        "website": null
    },
    "nasa/GTM_DesignSim": {
        "description": null,
        "name": "nasa/GTM_DesignSim",
        "topics": null,
        "website": null
    },
    "nasa/GeneLab-Training": {
        "description": "A repository for GeneLab Training documentation.",
        "name": "nasa/GeneLab-Training",
        "topics": [
            "genes",
            "genetics",
            "pipeline",
            "training",
            "training-materials",
            "education",
            "outreach",
            "nasa"
        ],
        "website": ""
    },
    "nasa/GeneLab-sampleProcessing": {
        "description": null,
        "name": "nasa/GeneLab-sampleProcessing",
        "topics": null,
        "website": null
    },
    "nasa/GeneLab_Data_Processing": {
        "description": null,
        "name": "nasa/GeneLab_Data_Processing",
        "topics": [
            "genetics",
            "pipeline",
            "genes",
            "genelab"
        ],
        "website": ""
    },
    "nasa/Giovanni": {
        "description": "Giovanni is an online (Web) environment for the display and analysis of geophysical parameters in which the provenance (data lineage) can easily be accessed.",
        "name": "nasa/Giovanni",
        "topics": null,
        "website": null
    },
    "nasa/GlennOPT": {
        "description": "Single and multi-objective optimization for computational simulations",
        "name": "nasa/GlennOPT",
        "topics": null,
        "website": "https://nasa.github.io/GlennOPT/build/html/"
    },
    "nasa/HDTN": {
        "description": null,
        "name": "nasa/HDTN",
        "topics": null,
        "website": null
    },
    "nasa/HDTN-BPCodec": {
        "description": null,
        "name": "nasa/HDTN-BPCodec",
        "topics": null,
        "website": null
    },
    "nasa/HK": {
        "description": "The Core Flight System (cFS) Housekeeping (HK) application.",
        "name": "nasa/HK",
        "topics": null,
        "website": ""
    },
    "nasa/HS": {
        "description": "The Core Flight System (cFS) Health and Safety (HS) application.",
        "name": "nasa/HS",
        "topics": null,
        "website": ""
    },
    "nasa/HyperInSPACE": {
        "description": null,
        "name": "nasa/HyperInSPACE",
        "topics": null,
        "website": null
    },
    "nasa/IDF": {
        "description": null,
        "name": "nasa/IDF",
        "topics": null,
        "website": null
    },
    "nasa/ISS_Camera_Geolocate": {
        "description": "Python software library that facilitates the geolocation of photographs and video frames from the International Space Station (ISS).",
        "name": "nasa/ISS_Camera_Geolocate",
        "topics": null,
        "website": null
    },
    "nasa/JHU-PIV-data": {
        "description": "Publicly available (NRA sponsored) Low Speed Axial Compressor particle image velocimetry data from Johns Hopkins University",
        "name": "nasa/JHU-PIV-data",
        "topics": null,
        "website": "https://nasa.github.io/JHU-PIV-data/"
    },
    "nasa/K2CE": {
        "description": "Kepler K2 Cadence Events (K2CE) is a Python data visualization and manipulation tool for astronomers to identify and remove cadences (observations) associated with problematic thruster events, thus producing cleaner light curves.  K2CE was designed to work with standard Kepler or K2 data products: long-cadence (30 min) and short-cadence (1 min) light curve files and long-cadence and short-cadence target pixel files.  The tool has been modified to work with light curve files and target pixel files from the TESS mission.",
        "name": "nasa/K2CE",
        "topics": null,
        "website": null
    },
    "nasa/Kamodo": {
        "description": null,
        "name": "nasa/Kamodo",
        "topics": null,
        "website": null
    },
    "nasa/Kepler-FLTI": {
        "description": null,
        "name": "nasa/Kepler-FLTI",
        "topics": null,
        "website": null
    },
    "nasa/Kepler-PyKE": {
        "description": "Kepler Community Data Analysis Tools (PyKE) https://github.com/KeplerGO/PyKE/  The Kepler archive contains time-series data calibrated and reduced from detector pixels. The pipelined reduction includes the removal of time-series trends systematic to a spacecraft and its environment.",
        "name": "nasa/Kepler-PyKE",
        "topics": null,
        "website": null
    },
    "nasa/KeplerPORTs": {
        "description": null,
        "name": "nasa/KeplerPORTs",
        "topics": null,
        "website": null
    },
    "nasa/Kodiak": {
        "description": "Library for rigorous verification of non-linear arithmetic",
        "name": "nasa/Kodiak",
        "topics": null,
        "website": ""
    },
    "nasa/LC": {
        "description": "The Core Flight System (cFS) Limit Checker (LC) application.",
        "name": "nasa/LC",
        "topics": null,
        "website": ""
    },
    "nasa/LH2Sim": {
        "description": null,
        "name": "nasa/LH2Sim",
        "topics": null,
        "website": null
    },
    "nasa/LHASA": {
        "description": "Landslide Hazard Analysis for Situational Awareness",
        "name": "nasa/LHASA",
        "topics": null,
        "website": "https://software.nasa.gov/software/GSC-17452-1"
    },
    "nasa/Lightkurve": {
        "description": null,
        "name": "nasa/Lightkurve",
        "topics": null,
        "website": null
    },
    "nasa/MAV": {
        "description": null,
        "name": "nasa/MAV",
        "topics": null,
        "website": null
    },
    "nasa/MCMCPy": {
        "description": "Python module for uncertainty quantification using a Markov chain Monte Carlo sampler",
        "name": "nasa/MCMCPy",
        "topics": null,
        "website": null
    },
    "nasa/MCT-Plugins": {
        "description": null,
        "name": "nasa/MCT-Plugins",
        "topics": null,
        "website": null
    },
    "nasa/MD": {
        "description": " The Core Flight System (cFS) Memory Dwell (MD) application.",
        "name": "nasa/MD",
        "topics": null,
        "website": ""
    },
    "nasa/MFISPy": {
        "description": "Multifidelity Importance Sampling with Python",
        "name": "nasa/MFISPy",
        "topics": null,
        "website": null
    },
    "nasa/MINX": {
        "description": "MISR INteractive eXplorer",
        "name": "nasa/MINX",
        "topics": null,
        "website": null
    },
    "nasa/MISR-Toolkit": {
        "description": "an API facilitating the access of MISR standard product files",
        "name": "nasa/MISR-Toolkit",
        "topics": null,
        "website": null
    },
    "nasa/MISR-View": {
        "description": null,
        "name": "nasa/MISR-View",
        "topics": null,
        "website": null
    },
    "nasa/ML-airport-arrival-runway": {
        "description": "The ML-airport-arrival-runway software is developed to provide a reference implementation to serve as a research example how to train and register Machine Learning (ML) models intended for predicting arrival runway assignments. The software is designed to point to databases which are not provided as part of the software release and thus this software is only intended to serve as an example of best practices. The software is built in python and leverages open-source libraries kedro, scikitlearn, MLFlow, and others. The software provides examples how to build three distinct pipelines for data query and save, data engineering, and data science. These pipelines enable scalable, repeatable, and maintainable development of ML models.",
        "name": "nasa/ML-airport-arrival-runway",
        "topics": [
            "usg-artificial-intelligence",
            "airport",
            "airport-simulation",
            "machine-learning"
        ],
        "website": ""
    },
    "nasa/ML-airport-configuration": {
        "description": "The ML-airport-configuration software is developed to provide a reference implementation to serve as a research example how to train and register Machine Learning (ML) models intended for predicting airport configuration as a time series. The software is designed to point to databases which are not provided as part of the software release and thus this software is only intended to serve as an example of best practices. The software is built in python and leverages open-source libraries kedro, scikitlearn, MLFlow, and others. The software provides examples how to build three distinct pipelines for data query and save, data engineering, and data science. These pipelines enable scalable, repeatable, and maintainable development of ML models.",
        "name": "nasa/ML-airport-configuration",
        "topics": [
            "usg-artificial-intelligence",
            "airport",
            "configuration",
            "usg-ai-training-data",
            "airport-simulation"
        ],
        "website": ""
    },
    "nasa/ML-airport-data-services": {
        "description": "The ML-airport-data-services software is developed to provide common code used throughout the ML-airport suite of software. The software is built in python and leverages open-source libraries kedro, scikitlearn, MLFlow, and others. The software provides useful functions for development of pipelines including data query and save, data engineering, and data science.",
        "name": "nasa/ML-airport-data-services",
        "topics": null,
        "website": null
    },
    "nasa/ML-airport-departure-runway": {
        "description": "The ML-airport-departure-runway software is developed to provide a reference implementation to serve as a research example how to train and register Machine Learning (ML) models intended for predicting departure runway assignments. The software is designed to point to databases which are not provided as part of the software release and thus this software is only intended to serve as an example of best practices. The software is built in python and leverages open-source libraries kedro, scikitlearn, MLFlow, and others. The software provides examples how to build three distinct pipelines for data query and save, data engineering, and data science. These pipelines enable scalable, repeatable, and maintainable development of ML models.",
        "name": "nasa/ML-airport-departure-runway",
        "topics": [
            "usg-artificial-intelligence",
            "airport",
            "airport-simulation",
            "machine-learning"
        ],
        "website": ""
    },
    "nasa/ML-airport-estimated-ON": {
        "description": "The ML-airport-estimated-ON software is developed to provide a reference implementation to serve as a research example how to train and register Machine Learning (ML) models intended for predicting arrival ON time. The software is designed to point to databases which are not provided as part of the software release and thus this software is only intended to serve as an example of best practices. The software is built in python and leverages open-source libraries kedro, scikitlearn, MLFlow, and others. The software provides examples how to build three distinct pipelines for data query and save, data engineering, and data science. These pipelines enable scalable, repeatable, and maintainable development of ML models.",
        "name": "nasa/ML-airport-estimated-ON",
        "topics": null,
        "website": null
    },
    "nasa/ML-airport-taxi-in": {
        "description": "The ML-airport-taxi-in software is developed to provide a reference implementation to serve as a research example how to train and register Machine Learning (ML) models intended for four distinct use cases: 1) unimpeded AMA taxi in, 2) unimpeded ramp taxi in, 3) impeded AMA taxi in, and 4) impeded ramp taxi in. The software is designed to point to databases which are not provided as part of the software release and thus this software is only intended to serve as an example of best practices. The software is built in python and leverages open-source libraries kedro, scikitlearn, MLFlow, and others. The software provides examples how to build three distinct pipelines for data query and save, data engineering, and data science. These pipelines enable scalable, repeatable, and maintainable development of ML models.",
        "name": "nasa/ML-airport-taxi-in",
        "topics": [
            "usg-artificial-intelligence",
            "airport",
            "machine-learning",
            "airport-simulation"
        ],
        "website": ""
    },
    "nasa/ML-airport-taxi-out": {
        "description": "The ML-airport-taxi-out software is developed to provide a reference implementation to serve as a research example how to train and register Machine Learning (ML) models intended for four distinct use cases: 1) unimpeded AMA taxi out, 2) unimpeded ramp taxi out, 3) impeded AMA taxi out, and 4) impeded ramp taxi out. The software is designed to point to databases which are not provided as part of the software release and thus this software is only intended to serve as an example of best practices. The software is built in python and leverages open-source libraries kedro, scikitlearn, MLFlow, and others. The software provides examples how to build three distinct pipelines for data query and save, data engineering, and data science. These pipelines enable scalable, repeatable, and maintainable development of ML models.",
        "name": "nasa/ML-airport-taxi-out",
        "topics": [
            "usg-artificial-intelligence",
            "usg-ai-training-data",
            "machine-learning",
            "airport",
            "airport-simulation"
        ],
        "website": ""
    },
    "nasa/MLMCPy": {
        "description": null,
        "name": "nasa/MLMCPy",
        "topics": null,
        "website": null
    },
    "nasa/MM": {
        "description": "The Core Flight System (cFS) Memory Manager (MM) application.",
        "name": "nasa/MM",
        "topics": null,
        "website": ""
    },
    "nasa/MMM-Py": {
        "description": "Marshall MRMS Mosaic Python Toolkit",
        "name": "nasa/MMM-Py",
        "topics": null,
        "website": null
    },
    "nasa/MOSAIC": {
        "description": "Shared computing for distributed systems science or autonomy support. ",
        "name": "nasa/MOSAIC",
        "topics": null,
        "website": null
    },
    "nasa/MPplugin": {
        "description": null,
        "name": "nasa/MPplugin",
        "topics": null,
        "website": null
    },
    "nasa/MSF-BE": {
        "description": "Contains open-source components of Methane Source Finder backend and front-end. Publishing open-source projects approved through JPL's NTR and open-source policy",
        "name": "nasa/MSF-BE",
        "topics": null,
        "website": null
    },
    "nasa/MXMCPy": {
        "description": null,
        "name": "nasa/MXMCPy",
        "topics": null,
        "website": null
    },
    "nasa/MiniWall": {
        "description": "Tool for investigating and extracting knowledge from large image data sets",
        "name": "nasa/MiniWall",
        "topics": null,
        "website": ""
    },
    "nasa/Mixed-Reality-Exploration-Toolkit": {
        "description": null,
        "name": "nasa/Mixed-Reality-Exploration-Toolkit",
        "topics": null,
        "website": null
    },
    "nasa/MultiDop": {
        "description": "Multiple-Doppler Radar Analysis Toolkit (MultiDop)",
        "name": "nasa/MultiDop",
        "topics": null,
        "website": null
    },
    "nasa/NASA-3D-Resources": {
        "description": "Here you'll find a growing collection of 3D models, textures, and images from inside NASA.",
        "name": "nasa/NASA-3D-Resources",
        "topics": null,
        "website": null
    },
    "nasa/NASA-Acronyms": {
        "description": null,
        "name": "nasa/NASA-Acronyms",
        "topics": null,
        "website": null
    },
    "nasa/NASA-Space-Weather-Media-Viewer": {
        "description": "Space Weather and the Sun.",
        "name": "nasa/NASA-Space-Weather-Media-Viewer",
        "topics": null,
        "website": "http://www.ideum.com/blog/category/nasa-2/"
    },
    "nasa/NASAaccess": {
        "description": "NASAaccess is R package that can generate gridded ascii tables of climate (CIMP5) and weather data (GPM, TRMM, GLDAS) needed to drive various hydrological models (e.g., SWAT, VIC, RHESSys, ..etc)",
        "name": "nasa/NASAaccess",
        "topics": null,
        "website": null
    },
    "nasa/NASMAT": {
        "description": null,
        "name": "nasa/NASMAT",
        "topics": null,
        "website": null
    },
    "nasa/NASTRAN-93": {
        "description": "NASTRAN is the NASA Structural Analysis System, a finite element analysis program (FEA)",
        "name": "nasa/NASTRAN-93",
        "topics": null,
        "website": null
    },
    "nasa/NASTRAN-95": {
        "description": null,
        "name": "nasa/NASTRAN-95",
        "topics": null,
        "website": null
    },
    "nasa/NPSS-Power-System-Library": {
        "description": null,
        "name": "nasa/NPSS-Power-System-Library",
        "topics": null,
        "website": null
    },
    "nasa/OED-with-NN-surrogates": {
        "description": null,
        "name": "nasa/OED-with-NN-surrogates",
        "topics": null,
        "website": null
    },
    "nasa/Open-Gov-Plan-v4": {
        "description": null,
        "name": "nasa/Open-Gov-Plan-v4",
        "topics": null,
        "website": null
    },
    "nasa/Open-Source-Catalog": {
        "description": "Contains the NASA open source software catalog for automatic deployment to code.nasa.gov",
        "name": "nasa/Open-Source-Catalog",
        "topics": [
            "open-source",
            "website",
            "nasa",
            "catalog",
            "meta-record",
            "ai-tags"
        ],
        "website": ""
    },
    "nasa/OpenMDAO-Framework": {
        "description": "OpenMDAO is an open-source Multidisciplinary Design Analysis and Optimization (MDAO) framework, written in Python. It helps users solve complex problems by allowing them to link together analysis codes from multiple disciplines at multiple levels of fidelity.  The development effort for OpenMDAO is being led out of the NASA Glenn Research Center in the MDAO branch. The development effort is being funded by the Fundamental Aeronautic Program, Subsonic Fixe Wing project. The ultimate goal is to provide a flexible common analysis platform that can be shared between industry, academia, and government.",
        "name": "nasa/OpenMDAO-Framework",
        "topics": null,
        "website": "openmdao.org"
    },
    "nasa/OpenSPIFe": {
        "description": "The Open Scheduling and Planning Interface for Exploration (OpenSPIFe) is an integrated planning and scheduling toolkit based on hundreds of hours of expert observation, use, and refinement of state-of-the-art planning and scheduling technology for several applications within NASA.",
        "name": "nasa/OpenSPIFe",
        "topics": null,
        "website": ""
    },
    "nasa/OpenVSP": {
        "description": "A parametric aircraft geometry tool",
        "name": "nasa/OpenVSP",
        "topics": null,
        "website": "www.openvsp.org"
    },
    "nasa/OpenVSP3Plugin": {
        "description": null,
        "name": "nasa/OpenVSP3Plugin",
        "topics": null,
        "website": null
    },
    "nasa/Oversight": {
        "description": null,
        "name": "nasa/Oversight",
        "topics": null,
        "website": null
    },
    "nasa/PLEXIL5": {
        "description": "PLEXIL5 is a Formal Verification Environment for PLEXIL",
        "name": "nasa/PLEXIL5",
        "topics": null,
        "website": ""
    },
    "nasa/PRECiSA": {
        "description": "Program Round-off Error Certifier via Static Analysis",
        "name": "nasa/PRECiSA",
        "topics": null,
        "website": null
    },
    "nasa/PSP": {
        "description": "The Core Flight System (cFS) Platform Support Package (PSP)",
        "name": "nasa/PSP",
        "topics": null,
        "website": null
    },
    "nasa/PanNDE": {
        "description": null,
        "name": "nasa/PanNDE",
        "topics": null,
        "website": null
    },
    "nasa/Plot3D_utilities": {
        "description": "A python and Julia library for reading, writing, finding connectivity for plot3d files",
        "name": "nasa/Plot3D_utilities",
        "topics": [
            "plot3d",
            "mesh-generation",
            "mesh",
            "computational-domain"
        ],
        "website": "https://nasa.github.io/Plot3D_utilities/docs/build/html/index.html"
    },
    "nasa/PoDS": {
        "description": "Portable Distributed Scripts. Portable Distributed Scripts (PoDS) is a Python application that allows users to execute serial independent tasks concurrently across nodes on multicore clusters. The package consists of a set of scripts working together through a simple text-based interface. A user only needs to provide minimal information to perform the desired tasks.",
        "name": "nasa/PoDS",
        "topics": null,
        "website": null
    },
    "nasa/PointCloudsVR": {
        "description": null,
        "name": "nasa/PointCloudsVR",
        "topics": null,
        "website": null
    },
    "nasa/PolyCARP": {
        "description": null,
        "name": "nasa/PolyCARP",
        "topics": null,
        "website": null
    },
    "nasa/Practical-Micromechanics": {
        "description": null,
        "name": "nasa/Practical-Micromechanics",
        "topics": null,
        "website": null
    },
    "nasa/PrognosticsAlgorithmLibrary": {
        "description": null,
        "name": "nasa/PrognosticsAlgorithmLibrary",
        "topics": null,
        "website": null
    },
    "nasa/PrognosticsMetricsLibrary": {
        "description": null,
        "name": "nasa/PrognosticsMetricsLibrary",
        "topics": null,
        "website": null
    },
    "nasa/PrognosticsModelLibrary": {
        "description": null,
        "name": "nasa/PrognosticsModelLibrary",
        "topics": null,
        "website": null
    },
    "nasa/PyAMPR": {
        "description": "Python Advanced Microwave Precipitation Radiometer Data Toolkit (PyAMPR)",
        "name": "nasa/PyAMPR",
        "topics": null,
        "website": null
    },
    "nasa/PyBlock": {
        "description": "Python Polarimetric Radar Beam Blockage Calculation (PyBlock)",
        "name": "nasa/PyBlock",
        "topics": null,
        "website": null
    },
    "nasa/PyGNSS": {
        "description": "Python Interface to Cyclone Global Navigation Satellite System (CYGNSS) Wind Dataset",
        "name": "nasa/PyGNSS",
        "topics": null,
        "website": null
    },
    "nasa/PyMKAD": {
        "description": null,
        "name": "nasa/PyMKAD",
        "topics": [
            "usg-artificial-intelligence"
        ],
        "website": ""
    },
    "nasa/PyTDA": {
        "description": "Python Turbulence Detection Algorithm (PyTDA)",
        "name": "nasa/PyTDA",
        "topics": null,
        "website": null
    },
    "nasa/QuIP": {
        "description": "QuIP provides an interactive environment for computing and presenting images and image sequences, manipulating and storing arbitrary data, and general scientific computing and plotting.  The current release supports unix-like operating systems (tested on Linux and Mac OSX), and Apple's iOS mobile operating system.  GPU acceleration is supported with either CUDA or OpenCL.  There is built-in support for psychophysical experimentation, with general-purpose staircase routines and analysis of psychometric functions.",
        "name": "nasa/QuIP",
        "topics": null,
        "website": ""
    },
    "nasa/RHEAS": {
        "description": "Regional Hydrologic Extremes Assessment System",
        "name": "nasa/RHEAS",
        "topics": null,
        "website": ""
    },
    "nasa/RVLib": {
        "description": "Random Variable Library",
        "name": "nasa/RVLib",
        "topics": null,
        "website": ""
    },
    "nasa/Rapid-Model-Import-Tool": {
        "description": null,
        "name": "nasa/Rapid-Model-Import-Tool",
        "topics": null,
        "website": null
    },
    "nasa/Reinforcement-Learning-Benchmarking": {
        "description": "Scripts for running several OpenAI Baselines algorithms on all MuJoCo or Roboschool gym environments to compare performance.",
        "name": "nasa/Reinforcement-Learning-Benchmarking",
        "topics": [
            "ai",
            "ml",
            "machine-learning",
            "reinforcement-learning",
            "usg-artificial-intelligence"
        ],
        "website": ""
    },
    "nasa/RtRetrievalFramework": {
        "description": null,
        "name": "nasa/RtRetrievalFramework",
        "topics": null,
        "website": null
    },
    "nasa/RtRetrievalFrameworkDoc": {
        "description": null,
        "name": "nasa/RtRetrievalFrameworkDoc",
        "topics": null,
        "website": null
    },
    "nasa/S4P": {
        "description": null,
        "name": "nasa/S4P",
        "topics": null,
        "website": null
    },
    "nasa/S4PA": {
        "description": "Simple, Scalable, Script-based, Science Processing (S4P) Archive (S4PA) is a disk-based archiving system for remote sensing data. The tool can be used for new data transfer, data preprocessing, metadata generation, and data archival. Services provided include data access control, data subscription, metadata publication, and data recovery. All data are archived on readily available disk drives, with FTP and HTTP being the primary modes of data access. S4PA includes a graphical user interface for monitoring and re-configuring system operation.",
        "name": "nasa/S4PA",
        "topics": null,
        "website": null
    },
    "nasa/SAFE-DART": {
        "description": null,
        "name": "nasa/SAFE-DART",
        "topics": null,
        "website": null
    },
    "nasa/SALaD": {
        "description": "SALaD (Semi-Automatic Landslide Detection) is a landslide mapping system. SALaD utilizes Object-based Image Analysis and Random Forest to map landslides. It requires optical imagery, a DEM, corner coordinates of a training area, and manually mapped landslides within the training area. The code is built to run primarily on a Linux.",
        "name": "nasa/SALaD",
        "topics": null,
        "website": null
    },
    "nasa/SBN": {
        "description": null,
        "name": "nasa/SBN",
        "topics": null,
        "website": null
    },
    "nasa/SBN-Client": {
        "description": "The Software Bus Network Client (SBNC) enables two-way communication with NASA's core Flight System (cFS) Software Bus and an external application. SBNC implements the Software Bus Network (SBN) communication protocol in a standalone C library.",
        "name": "nasa/SBN-Client",
        "topics": null,
        "website": null
    },
    "nasa/SC": {
        "description": "The Core Flight System (cFS) Stored Commands (SC) application.",
        "name": "nasa/SC",
        "topics": null,
        "website": ""
    },
    "nasa/SCA": {
        "description": "The Core Flight System (cFS) Stored Command Absolute (SCA) application.",
        "name": "nasa/SCA",
        "topics": null,
        "website": null
    },
    "nasa/SCH": {
        "description": "The Core Flight System (cFS) Scheduler (SCH) application.",
        "name": "nasa/SCH",
        "topics": null,
        "website": ""
    },
    "nasa/SGNDI": {
        "description": "Separable Grid N-Dimensional Interpolator: A multi-dimensional interpolating class with based on 1D interpolation.",
        "name": "nasa/SGNDI",
        "topics": null,
        "website": ""
    },
    "nasa/SIL": {
        "description": "Tools for generating CFS ECI-compatible code from Simulink models",
        "name": "nasa/SIL",
        "topics": null,
        "website": ""
    },
    "nasa/SIRS": {
        "description": "Simple Improved Reference Subtraction (SIRS) is a technique for reducing the read noise of near-infrared array detector systems.",
        "name": "nasa/SIRS",
        "topics": null,
        "website": null
    },
    "nasa/SMCPy": {
        "description": "Python module for uncertainty quantification using a parallel sequential Monte Carlo sampler",
        "name": "nasa/SMCPy",
        "topics": null,
        "website": ""
    },
    "nasa/SROMPy": {
        "description": "Python module to generate stochastic reduced order models (SROMs)",
        "name": "nasa/SROMPy",
        "topics": null,
        "website": null
    },
    "nasa/STM-docs": {
        "description": "Temporary description",
        "name": "nasa/STM-docs",
        "topics": null,
        "website": null
    },
    "nasa/SingleDop": {
        "description": "Single Doppler Retrieval Toolkit (SingleDop)",
        "name": "nasa/SingleDop",
        "topics": null,
        "website": null
    },
    "nasa/StereoPipeline": {
        "description": "The NASA Ames Stereo Pipeline is a suite of automated geodesy & stereogrammetry tools designed for processing planetary imagery captured from orbiting and landed robotic explorers on other planets.",
        "name": "nasa/StereoPipeline",
        "topics": null,
        "website": ""
    },
    "nasa/Stratway": {
        "description": "Strategic Conflict Resolution (Stratway)",
        "name": "nasa/Stratway",
        "topics": null,
        "website": null
    },
    "nasa/System_Monitor_for_Radiation_Testing": {
        "description": "Single Board Computer System Monitoring Python Software for Radiation Testing",
        "name": "nasa/System_Monitor_for_Radiation_Testing",
        "topics": null,
        "website": null
    },
    "nasa/T-MATS": {
        "description": "An open source thermodynamic modeling package completed on behalf of NASA. The Toolbox for the Modeling and Analysis of Thermodynamic Systems (T-MATS) package offers a MATLAB/Simulink toolbox that gives a developer the ability to create simulations of such thermodynamic systems as turbomachinery and gas turbines. Keywords: TMATS, Control System, Numerical Methods, Newton-Raphson, Jacobian Calculation, Propulsion, Aircraft Engine, Jet, Turbofan, Turbojet, Compressor, Turbine, Nozzle, Inlet, open source",
        "name": "nasa/T-MATS",
        "topics": null,
        "website": ""
    },
    "nasa/TCML": {
        "description": "The Tip Clearance Modeling Library (TCML) was developed to model the dynamic variation of the high pressure turbine (HPT) tip clearance in aero-engine turbomachinery. The modeling techniques should be applicable to compressors as well. The model can be driven by prescribed inputs or seamlessly integrated with an aero-engine simulation such as one developed using the Toolbox for Modeling and Analysis of Thermodynamic Systems (T-MATS).",
        "name": "nasa/TCML",
        "topics": null,
        "website": ""
    },
    "nasa/TLNS3D": {
        "description": null,
        "name": "nasa/TLNS3D",
        "topics": null,
        "website": null
    },
    "nasa/TSAT": {
        "description": "The Thermal Systems Analysis Toolbox (TSAT) is a MATLAB/Simulink based tool for modeling and analysis of dynamic thermal systems involving heat transfer. It is best suited for 1-D and 2-D heat transfer involving solid planar and cylindrical structures, however, the toolset is more extensive than this. The tools enable consideration of conduction, convection, and radiation boundary conditions. Some advanced capabilities are provided when it comes to approximating conduction within non-isotropic materials, structures with material transitions, and structures with time-varying temperature dependent material properties. Numerous tools are available to facilitate the construction of modular models of thermal systems and their integration with larger system models.",
        "name": "nasa/TSAT",
        "topics": null,
        "website": ""
    },
    "nasa/TTECTrA": {
        "description": "An open source, semi-automated, control design tool for subsonic aircraft engine simulations written in the MATLAB/Simulink environment.  The Tool for Turbine Engine Closed-loop Transient Analysis provides the user a preliminary estimate of the closed-loop transient performance of an engine model.",
        "name": "nasa/TTECTrA",
        "topics": null,
        "website": ""
    },
    "nasa/Three-Dimensional-Nozzle-Design-Code": {
        "description": null,
        "name": "nasa/Three-Dimensional-Nozzle-Design-Code",
        "topics": null,
        "website": null
    },
    "nasa/Transform-to-Open-Science": {
        "description": "Transformation to Open Science",
        "name": "nasa/Transform-to-Open-Science",
        "topics": [
            "open-data",
            "open-science",
            "open-code",
            "open-source",
            "cross-agency"
        ],
        "website": null
    },
    "nasa/TrickFMI": {
        "description": "A Functional Mockup Interface (FMI) Standard Implementation for Trick Base Models and Simulations",
        "name": "nasa/TrickFMI",
        "topics": null,
        "website": null
    },
    "nasa/TrickHLA": {
        "description": "TrickHLA: An IEEE 1516 High Level Architecture (HLA) Simulation Interoperability Standard Implementation for Trick Base Simulations",
        "name": "nasa/TrickHLA",
        "topics": null,
        "website": null
    },
    "nasa/UQ-Kernel-Mini-App": {
        "description": null,
        "name": "nasa/UQ-Kernel-Mini-App",
        "topics": null,
        "website": null
    },
    "nasa/UQPCE": {
        "description": "Uncertainty Quantification using Polynomial Chaos Expansion (UQPCE) is an open source, python based research code for use in parametric, non-deterministic computational studies. UQPCE utilizes a non-intrusive polynomial chaos expansion surrogate modeling technique to efficiently estimate uncertainties for computational analyses. The software allows the user to perform an automated uncertainty analysis for any given computational code without requiring modification to the source. UQPCE estimates sensitivities, confidence intervals, and other model statistics, which can be useful in the conceptual design and analysis of flight vehicles. This software was developed for the Aeronautics Systems Analysis Branch (ASAB) within the Systems Analysis and Concepts Directorate (SACD) at NASA Langley Research Center to study potential impacts of uncertainties on the prediction of ground noise generated from commercial supersonic aircraft concepts.       ",
        "name": "nasa/UQPCE",
        "topics": null,
        "website": null
    },
    "nasa/VADER": {
        "description": null,
        "name": "nasa/VADER",
        "topics": null,
        "website": null
    },
    "nasa/VICAR": {
        "description": null,
        "name": "nasa/VICAR",
        "topics": null,
        "website": null
    },
    "nasa/VIIRS-demo": {
        "description": null,
        "name": "nasa/VIIRS-demo",
        "topics": null,
        "website": null
    },
    "nasa/VirtualADAPT": {
        "description": null,
        "name": "nasa/VirtualADAPT",
        "topics": null,
        "website": null
    },
    "nasa/WellClear": {
        "description": "Well-Clear Boundary Models for Integration of UAS in the NAS",
        "name": "nasa/WellClear",
        "topics": null,
        "website": null
    },
    "nasa/WinASSIST": {
        "description": null,
        "name": "nasa/WinASSIST",
        "topics": null,
        "website": null
    },
    "nasa/WinSURE": {
        "description": null,
        "name": "nasa/WinSURE",
        "topics": null,
        "website": null
    },
    "nasa/World-Wind-Java": {
        "description": "World Wind, an open source 3D interactive world viewer, was created by NASA's Learning Technologies project, and released in mid-2004. It is now developed by NASA staff and open source community developers.",
        "name": "nasa/World-Wind-Java",
        "topics": null,
        "website": "http://worldwind.arc.nasa.gov/java/"
    },
    "nasa/XPlaneConnect": {
        "description": "The X-Plane Communications Toolbox is a research tool used to interact with the X-Plane flight simulator",
        "name": "nasa/XPlaneConnect",
        "topics": null,
        "website": ""
    },
    "nasa/abaverify": {
        "description": null,
        "name": "nasa/abaverify",
        "topics": null,
        "website": null
    },
    "nasa/aerie": {
        "description": null,
        "name": "nasa/aerie",
        "topics": null,
        "website": null
    },
    "nasa/aladyn": {
        "description": null,
        "name": "nasa/aladyn",
        "topics": null,
        "website": null
    },
    "nasa/aladynpi": {
        "description": null,
        "name": "nasa/aladynpi",
        "topics": null,
        "website": null
    },
    "nasa/aos-dr": {
        "description": "This cFS app is called Diagnostic Reasoner (DR), and as the name implies, it will diagnose a system of interest. That is, it will do fault detection and fault isolation. A more complete description of DR and how it works can be found in the DR User's Manual, in the doc dir.",
        "name": "nasa/aos-dr",
        "topics": [
            "cfs",
            "core-flight-system"
        ],
        "website": ""
    },
    "nasa/api-docs": {
        "description": "api.nasa.gov",
        "name": "nasa/api-docs",
        "topics": [
            "api",
            "nasa-apis",
            "gov",
            "javascript",
            "python",
            "example",
            "demo",
            "nasa",
            "uswds"
        ],
        "website": "http://nasa.github.io/api-docs/"
    },
    "nasa/api-docs-stage": {
        "description": "A staging environment for api.nasa.gov",
        "name": "nasa/api-docs-stage",
        "topics": null,
        "website": null
    },
    "nasa/apod-api": {
        "description": "Astronomy Picture of the Day API service",
        "name": "nasa/apod-api",
        "topics": [
            "astronomy-picture",
            "astronomy",
            "astronomy-picture-of-the-day",
            "nasa",
            "nasa-api",
            "space",
            "apod-api",
            "apod-parser",
            "astronomy-photo",
            "apod-image"
        ],
        "website": null
    },
    "nasa/astrobee": {
        "description": "NASA Astrobee Robot Software",
        "name": "nasa/astrobee",
        "topics": null,
        "website": "https://www.nasa.gov/astrobee"
    },
    "nasa/astrobee_android": {
        "description": "NASA Astrobee Robot Software, Android",
        "name": "nasa/astrobee_android",
        "topics": null,
        "website": "https://www.nasa.gov/astrobee"
    },
    "nasa/astrobee_gds": {
        "description": "The Astrobee Control Station is an Eclipse RCP application that can command and monitor an Astrobee robot or simulator.",
        "name": "nasa/astrobee_gds",
        "topics": null,
        "website": null
    },
    "nasa/astrobee_media": {
        "description": null,
        "name": "nasa/astrobee_media",
        "topics": null,
        "website": null
    },
    "nasa/astrobot": {
        "description": "A slack bot integration with NASA data",
        "name": "nasa/astrobot",
        "topics": [
            "slack",
            "discord",
            "nasa-data",
            "apod",
            "apod-api",
            "bot"
        ],
        "website": null
    },
    "nasa/atd2-fuser": {
        "description": null,
        "name": "nasa/atd2-fuser",
        "topics": null,
        "website": null
    },
    "nasa/autodoc": {
        "description": "Create Microsoft Documents automatically using Text and Template files",
        "name": "nasa/autodoc",
        "topics": null,
        "website": null
    },
    "nasa/bingo": {
        "description": null,
        "name": "nasa/bingo",
        "topics": null,
        "website": null
    },
    "nasa/bingocpp": {
        "description": null,
        "name": "nasa/bingocpp",
        "topics": null,
        "website": null
    },
    "nasa/bplib": {
        "description": null,
        "name": "nasa/bplib",
        "topics": null,
        "website": null
    },
    "nasa/cFE": {
        "description": "The Core Flight System (cFS) Core Flight Executive (cFE)",
        "name": "nasa/cFE",
        "topics": null,
        "website": ""
    },
    "nasa/cFS": {
        "description": "The Core Flight System (cFS)",
        "name": "nasa/cFS",
        "topics": null,
        "website": ""
    },
    "nasa/cFS-EDS-GroundStation": {
        "description": null,
        "name": "nasa/cFS-EDS-GroundStation",
        "topics": null,
        "website": null
    },
    "nasa/cFS-GroundSystem": {
        "description": "The Core Flight System (cFS) Ground System Lab Tool (cFS-GroundSystem)",
        "name": "nasa/cFS-GroundSystem",
        "topics": null,
        "website": null
    },
    "nasa/cash": {
        "description": "Cassini Structured Homepages uses LDAP authorization to provide a security layer to webpage content",
        "name": "nasa/cash",
        "topics": null,
        "website": null
    },
    "nasa/ccmc-swpc-cat-web": {
        "description": "The original IDL version of the SWPC_CAT tool was developed by NOAA Space Weather Prediction Center (SWPC). It is the primary tool being used by NOAA SWPC in measuring key parameters of a Coronal Mass Ejection (CME) as it emerges from the solar corona. This CCMC_SWPC_CAT_Web Tool is an online version based on the original SWPC_CAT tool that is being developed and maintained by the Community Coordinated Modeling Center (CCMC) at NASA. The CCMC_SWPC_CAT_Web tool is written in Python.",
        "name": "nasa/ccmc-swpc-cat-web",
        "topics": null,
        "website": null
    },
    "nasa/cfdtools": {
        "description": null,
        "name": "nasa/cfdtools",
        "topics": null,
        "website": null
    },
    "nasa/cfs_lib": {
        "description": null,
        "name": "nasa/cfs_lib",
        "topics": null,
        "website": null
    },
    "nasa/channel-emulator": {
        "description": null,
        "name": "nasa/channel-emulator",
        "topics": null,
        "website": null
    },
    "nasa/ci_lab": {
        "description": "The Core Flight System (cFS) Command Ingest Lab App (ci_lab)",
        "name": "nasa/ci_lab",
        "topics": null,
        "website": null
    },
    "nasa/cmr-csw": {
        "description": "CMR-CSW is a web application developed by NASA EOSDIS to enable data discovery, search, and access across the CMR Earth Science data holdings via the OpenGIS Catalogue Service for the Web (CSW) standard. ",
        "name": "nasa/cmr-csw",
        "topics": null,
        "website": "https://cmr.earthdata.nasa.gov/csw"
    },
    "nasa/cmr-dummy-repo": {
        "description": null,
        "name": "nasa/cmr-dummy-repo",
        "topics": null,
        "website": null
    },
    "nasa/cmr-metadata-review": {
        "description": "The CMR Metadata Review tool is used to curate NASA EOSDIS collection and granule level metadata in CMR for correctness, completeness and consistency.",
        "name": "nasa/cmr-metadata-review",
        "topics": [
            "ruby",
            "rails"
        ],
        "website": ""
    },
    "nasa/cmr-opensearch": {
        "description": "CMR-OpenSearch is a web application developed by NASA EOSDIS to enable data discovery, search, and access across the CMR Earth Science data holdings via the OpenSearch standard.",
        "name": "nasa/cmr-opensearch",
        "topics": null,
        "website": "https://cmr.earthdata.nasa.gov/opensearch"
    },
    "nasa/cmr-stac": {
        "description": null,
        "name": "nasa/cmr-stac",
        "topics": null,
        "website": null
    },
    "nasa/coda": {
        "description": null,
        "name": "nasa/coda",
        "topics": null,
        "website": null
    },
    "nasa/code-nasa-gov": {
        "description": "code.nasa.gov site leveraging the Open Source Catalog on github.com, powered by Polymer",
        "name": "nasa/code-nasa-gov",
        "topics": [
            "nasa",
            "open-source",
            "code",
            "catalog",
            "gov-tech"
        ],
        "website": "https://code.nasa.gov"
    },
    "nasa/code.nasa.gov_legacy": {
        "description": null,
        "name": "nasa/code.nasa.gov_legacy",
        "topics": null,
        "website": null
    },
    "nasa/common-mapping-client": {
        "description": "CMC is a starter-kit for creating web-based mapping applications",
        "name": "nasa/common-mapping-client",
        "topics": null,
        "website": "https://nasa.github.io/common-mapping-client/branches/master/"
    },
    "nasa/concept-tagging-api": {
        "description": "Contains code for the API that takes in text and predicts concepts & keywords from a list of standardized NASA keywords.  API is for exposing models created with the repository `concept-tagging-training`.  ",
        "name": "nasa/concept-tagging-api",
        "topics": [
            "nlp",
            "nlp-machine-learning",
            "nasa",
            "nasa-api",
            "api",
            "flask-application",
            "usg-artificial-intelligence",
            "concept-tag",
            "machine-learning"
        ],
        "website": ""
    },
    "nasa/concept-tagging-training": {
        "description": "Contains code for training NLP models that takes in text and predicts concepts & keywords from a list of standardized NASA keywords. Code for the API that uses models trained by this repo is in `concept-tagging-api` repository.",
        "name": "nasa/concept-tagging-training",
        "topics": [
            "nlp",
            "nlp-train",
            "nlp-machine-learning",
            "usg-artificial-intelligence",
            "concept-tagging",
            "makefile",
            "machine-learning"
        ],
        "website": ""
    },
    "nasa/conduit_cms": {
        "description": null,
        "name": "nasa/conduit_cms",
        "topics": null,
        "website": null
    },
    "nasa/content-guide": {
        "description": "NASA GRC's Content Guide",
        "name": "nasa/content-guide",
        "topics": null,
        "website": "https://nasa.github.io/content-guide/"
    },
    "nasa/cpr": {
        "description": "LAR-19679-1 : CPR*: Formally Verified Compact Position Reporting Algorithm",
        "name": "nasa/cpr",
        "topics": null,
        "website": null
    },
    "nasa/cratous": {
        "description": "CRoss-Application Translator for Operational Unmanned Systems (CRATOUS) is a software bridge that enables the communication between AFRL's UxAS and NASA's ICAROUS.",
        "name": "nasa/cratous",
        "topics": null,
        "website": ""
    },
    "nasa/cumulus": {
        "description": "Cumulus Framework + Cumulus API",
        "name": "nasa/cumulus",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": ""
    },
    "nasa/cumulus-api": {
        "description": "Cumulus API Documentation",
        "name": "nasa/cumulus-api",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": "https://nasa.github.io/cumulus-api/"
    },
    "nasa/cumulus-circleci-image": {
        "description": null,
        "name": "nasa/cumulus-circleci-image",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": null
    },
    "nasa/cumulus-dashboard": {
        "description": "Cumulus API Dashboard",
        "name": "nasa/cumulus-dashboard",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": ""
    },
    "nasa/cumulus-distribution-api": {
        "description": "Documentation for the Cumulus Distribution API",
        "name": "nasa/cumulus-distribution-api",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": "https://nasa.github.io/cumulus-distribution-api/"
    },
    "nasa/cumulus-docs": {
        "description": "Documentation on setting up, maintaining, and expanding Cumulus [DEPRECATED]",
        "name": "nasa/cumulus-docs",
        "topics": null,
        "website": "https://nasa.github.io/cumulus-docs"
    },
    "nasa/cumulus-ecs-task": {
        "description": null,
        "name": "nasa/cumulus-ecs-task",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": null
    },
    "nasa/cumulus-ecs-task-python": {
        "description": "Docker for running python lambdas as tasks in AWS ECS",
        "name": "nasa/cumulus-ecs-task-python",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": null
    },
    "nasa/cumulus-integration-tests": {
        "description": "Integration tests for Cumulus workflows [DEPRECATED]",
        "name": "nasa/cumulus-integration-tests",
        "topics": null,
        "website": ""
    },
    "nasa/cumulus-message-adapter": {
        "description": "A command-line interface for preparing and outputting Cumulus Messages for Cumulus Tasks",
        "name": "nasa/cumulus-message-adapter",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": ""
    },
    "nasa/cumulus-message-adapter-java": {
        "description": "Java handler for the Cumulus Message Adapter",
        "name": "nasa/cumulus-message-adapter-java",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": ""
    },
    "nasa/cumulus-message-adapter-js": {
        "description": "A library for validating and parsing the Cumulus message protocol",
        "name": "nasa/cumulus-message-adapter-js",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": ""
    },
    "nasa/cumulus-message-adapter-python": {
        "description": null,
        "name": "nasa/cumulus-message-adapter-python",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": null
    },
    "nasa/cumulus-orca": {
        "description": null,
        "name": "nasa/cumulus-orca",
        "topics": null,
        "website": null
    },
    "nasa/cumulus-process-py": {
        "description": "Python utilities library for Cumulus",
        "name": "nasa/cumulus-process-py",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": null
    },
    "nasa/cumulus-process-py-seed": {
        "description": "Template project for creating new Cumulus tasks using cumulus-process-py",
        "name": "nasa/cumulus-process-py-seed",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": null
    },
    "nasa/cumulus-template-deploy": {
        "description": "Cumulus template deployment project",
        "name": "nasa/cumulus-template-deploy",
        "topics": [
            "cumulus",
            "nasa-cumulus"
        ],
        "website": null
    },
    "nasa/daa-displays": {
        "description": null,
        "name": "nasa/daa-displays",
        "topics": null,
        "website": null
    },
    "nasa/daidalus": {
        "description": "open source release: LAR-19282-1 Detect and Avoid Alerting Logic for Unmanned Systems (DAIDALUS) with Dynamic Well-Clear Separation Volumes).",
        "name": "nasa/daidalus",
        "topics": null,
        "website": null
    },
    "nasa/data-nasa-gov-frontpage": {
        "description": "a frontpage for data.nasa.gov",
        "name": "nasa/data-nasa-gov-frontpage",
        "topics": [
            "data-visualization",
            "data-catalog",
            "treemap",
            "datasets",
            "nasa",
            "frontpage",
            "metadata",
            "open-data",
            "gov-tech",
            "gov"
        ],
        "website": "https://nasa.github.io/data-nasa-gov-frontpage/"
    },
    "nasa/data.nasa.gov": {
        "description": null,
        "name": "nasa/data.nasa.gov",
        "topics": null,
        "website": null
    },
    "nasa/dawn-grand-toolbox": {
        "description": "Software toolbox for the NASA Dawn mission's Gamma Ray and Neutron Detector (GRaND) PDS4 archive.",
        "name": "nasa/dawn-grand-toolbox",
        "topics": null,
        "website": null
    },
    "nasa/delta": {
        "description": "Deep Learning for Satellite Imagery",
        "name": "nasa/delta",
        "topics": [
            "deep-learning",
            "machine-learning",
            "remote-sensing",
            "usg-artificial-intelligence"
        ],
        "website": ""
    },
    "nasa/denem": {
        "description": "DTN Network Monitoring",
        "name": "nasa/denem",
        "topics": null,
        "website": null
    },
    "nasa/dictionaries": {
        "description": "A collection of NASA \"dictionaries\", including thesauri, taxonomies and ontologies.",
        "name": "nasa/dictionaries",
        "topics": null,
        "website": ""
    },
    "nasa/digital-strategy": {
        "description": "Machine-readable schema for NASA's response to the president's digital strategy.",
        "name": "nasa/digital-strategy",
        "topics": null,
        "website": null
    },
    "nasa/dorado-scheduling": {
        "description": "Dorado observation planning and scheduling simulations",
        "name": "nasa/dorado-scheduling",
        "topics": [
            "nasa",
            "ultraviolet",
            "astronomy",
            "scheduling-algorithms",
            "cplex",
            "healpix",
            "mixed-integer-programming",
            "optimization",
            "operations-research",
            "satellite"
        ],
        "website": ""
    },
    "nasa/dorado-sensitivity": {
        "description": "Dorado sensitivity and exposure time calculator",
        "name": "nasa/dorado-sensitivity",
        "topics": [
            "nasa",
            "ultraviolet",
            "astronomy",
            "satellite",
            "astropy",
            "ccd"
        ],
        "website": ""
    },
    "nasa/dorado-streamlit": {
        "description": "Dorado observer web tools built with Streamlit",
        "name": "nasa/dorado-streamlit",
        "topics": [
            "astronomy",
            "nasa",
            "satellite",
            "ccd",
            "astropy",
            "ultraviolet",
            "streamlit"
        ],
        "website": ""
    },
    "nasa/drf": {
        "description": null,
        "name": "nasa/drf",
        "topics": null,
        "website": null
    },
    "nasa/earth-imagery-api": {
        "description": "The code repository for earth-imagery-api on https://api.nasa.gov/",
        "name": "nasa/earth-imagery-api",
        "topics": [
            "earth",
            "earth-observation",
            "user-friendly",
            "beginner",
            "api",
            "flask",
            "nasa",
            "landsat",
            "imagery",
            "satellite",
            "satellite-imagery",
            "satellite-data",
            "python",
            "gee"
        ],
        "website": "https://api.nasa.gov/#Earth"
    },
    "nasa/earthdata-search": {
        "description": "Earthdata Search is a web application developed by NASA EOSDIS to enable data discovery, search, comparison, visualization, and access across EOSDIS' Earth Science data holdings.",
        "name": "nasa/earthdata-search",
        "topics": [
            "earthdata-search",
            "data-discovery",
            "eosdis",
            "hacktoberfest"
        ],
        "website": "https://search.earthdata.nasa.gov"
    },
    "nasa/edsc-echoforms": {
        "description": "A React component implementing the ECHO Forms specification.",
        "name": "nasa/edsc-echoforms",
        "topics": [
            "earthdata-search",
            "echo-forms",
            "eosdis",
            "hacktoberfest"
        ],
        "website": ""
    },
    "nasa/edsc-geo": {
        "description": null,
        "name": "nasa/edsc-geo",
        "topics": null,
        "website": null
    },
    "nasa/edsc-timeline": {
        "description": null,
        "name": "nasa/edsc-timeline",
        "topics": [
            "earthdata-search",
            "timeline",
            "eosdis"
        ],
        "website": null
    },
    "nasa/eefs": {
        "description": "EEPROM File System",
        "name": "nasa/eefs",
        "topics": null,
        "website": null
    },
    "nasa/elf2cfetbl": {
        "description": "The Core Flight System (cFS) ELF to CFE Table Tool (elf2cfetbl)",
        "name": "nasa/elf2cfetbl",
        "topics": null,
        "website": null
    },
    "nasa/eo-metadata-tools": {
        "description": "eo-metadata-tools is a set of repositories for working with Earth Observation metadata. At its core are common libraries and demonstration scripts for accessing the Common Metadata Repository, to be accompanied by more specific modules and scripts to do dataset-specific queries, metadata validation, etc...",
        "name": "nasa/eo-metadata-tools",
        "topics": null,
        "website": ""
    },
    "nasa/europa": {
        "description": null,
        "name": "nasa/europa",
        "topics": null,
        "website": null
    },
    "nasa/exoscene": {
        "description": null,
        "name": "nasa/exoscene",
        "topics": null,
        "website": null
    },
    "nasa/fe3": {
        "description": null,
        "name": "nasa/fe3",
        "topics": null,
        "website": null
    },
    "nasa/fprime": {
        "description": "F' - A flight software and embedded systems framework",
        "name": "nasa/fprime",
        "topics": [
            "flight-software",
            "embedded-systems",
            "nasa",
            "cpp",
            "spaceflight",
            "real-time",
            "raspberry-pi",
            "object-oriented-programming",
            "components",
            "framework",
            "flight",
            "embedded",
            "fprime"
        ],
        "website": "https://nasa.github.io/fprime"
    },
    "nasa/fs_lib": {
        "description": "The Core Flight System (cFS) File Servies Library (fs_lib)",
        "name": "nasa/fs_lib",
        "topics": null,
        "website": null
    },
    "nasa/gFTL": {
        "description": null,
        "name": "nasa/gFTL",
        "topics": null,
        "website": null
    },
    "nasa/gen_msgids": {
        "description": "The Core Flight System (cFS) Print Message IDs Tool (gen_msgids)",
        "name": "nasa/gen_msgids",
        "topics": null,
        "website": null
    },
    "nasa/gen_sch_tbl": {
        "description": "The Core Flight System (cFS) Generate Schedule Table Tool (gen_sch_tbl)",
        "name": "nasa/gen_sch_tbl",
        "topics": null,
        "website": null
    },
    "nasa/geolambda": {
        "description": "Create and deploy Geospatial AWS Lambda functions",
        "name": "nasa/geolambda",
        "topics": null,
        "website": null
    },
    "nasa/georef": {
        "description": "GeoRef is a Web-based software application designed to increase the efficiency and precision in geo-locating photographs taken by astronauts from the International Space Station. GeoRef provides highly automated processes for: (1) calculating the latitude and longitude coordinates of the center point of the image, and (2) producing geo-referenced map overlays for the image. The georeferenced images produced by GeoRef are designed to support the needs of educational, Earth science, and disaster response users.",
        "name": "nasa/georef",
        "topics": null,
        "website": null
    },
    "nasa/georef_deploy": {
        "description": null,
        "name": "nasa/georef_deploy",
        "topics": null,
        "website": null
    },
    "nasa/georef_geocamtiepoint": {
        "description": null,
        "name": "nasa/georef_geocamtiepoint",
        "topics": null,
        "website": null
    },
    "nasa/georef_geocamutilweb": {
        "description": null,
        "name": "nasa/georef_geocamutilweb",
        "topics": null,
        "website": null
    },
    "nasa/georef_imageregistration": {
        "description": null,
        "name": "nasa/georef_imageregistration",
        "topics": null,
        "website": null
    },
    "nasa/giant": {
        "description": "Goddard Image Analysis and Navigation Tool",
        "name": "nasa/giant",
        "topics": null,
        "website": null
    },
    "nasa/github-latest-commits-widget": {
        "description": "Simple widget that shows a repo's latest github commit activity on your site",
        "name": "nasa/github-latest-commits-widget",
        "topics": null,
        "website": ""
    },
    "nasa/glm_ql": {
        "description": "quick-look imagery (PNG and GeoTIFF) when provided Level2 Operational GLM (Geostationary Lightning Mapper) data files",
        "name": "nasa/glm_ql",
        "topics": null,
        "website": null
    },
    "nasa/grc-atf-kms-tools": {
        "description": null,
        "name": "nasa/grc-atf-kms-tools",
        "topics": null,
        "website": null
    },
    "nasa/grc-atf-meza-config": {
        "description": null,
        "name": "nasa/grc-atf-meza-config",
        "topics": null,
        "website": null
    },
    "nasa/gunns": {
        "description": "The NASA General-Use Nodal Network Solver (GUNNS) software",
        "name": "nasa/gunns",
        "topics": null,
        "website": ""
    },
    "nasa/harmony": {
        "description": "Application for providing services for Earth observation data in the cloud using standards-based APIs",
        "name": "nasa/harmony",
        "topics": null,
        "website": null
    },
    "nasa/harmony-netcdf-to-zarr": {
        "description": "Service for transforming NetCDF4 files into Zarr files within Harmony.  https://github.com/nasa/harmony",
        "name": "nasa/harmony-netcdf-to-zarr",
        "topics": null,
        "website": null
    },
    "nasa/harmony-py": {
        "description": "Python client library for working with NASA\u2019s Earth observing system data using Harmony.  https://harmony.earthdata.nasa.gov",
        "name": "nasa/harmony-py",
        "topics": null,
        "website": null
    },
    "nasa/harmony-qgis": {
        "description": "QGIS plugin for working with NASA\u2019s Earth observing system data using Harmony.  https://harmony.earthdata.nasa.gov",
        "name": "nasa/harmony-qgis",
        "topics": null,
        "website": null
    },
    "nasa/harmony-regression-tests": {
        "description": null,
        "name": "nasa/harmony-regression-tests",
        "topics": null,
        "website": null
    },
    "nasa/harmony-service-example": {
        "description": "Example service implementation for subsetting and reprojecting L3 data using Harmony. https://github.com/nasa/harmony",
        "name": "nasa/harmony-service-example",
        "topics": null,
        "website": null
    },
    "nasa/harmony-service-lib-py": {
        "description": "Python library to simplify adapting transformation services for use in Harmony https://github.com/nasa/harmony",
        "name": "nasa/harmony-service-lib-py",
        "topics": null,
        "website": null
    },
    "nasa/hybridq": {
        "description": "HybridQ is a highly extensible platform designed to provide a common framework to integrate multiple state-of-the-art techniques to simulate large scale quantum circuits on a variety of hardware. HybridQ provides tools to manipulate, develop, and extend noiseless and noisy circuits for different hardware architectures. HybridQ also supports large-scale high-performance computing (HPC) simulations, automatically balancing workload among different processor nodes and enabling the use of multiple backends to maximize parallel efficiency. Everything is then glued together by a simple and expressive language that allows seamless switching from one technique to another as well as from one hardware to the next, without the need to write lengthy translations, thus greatly simplifying the development of new hybrid algorithms and techniques.",
        "name": "nasa/hybridq",
        "topics": [
            "quantum-computing",
            "high-performance-computing",
            "hpc",
            "simulation"
        ],
        "website": ""
    },
    "nasa/icarous": {
        "description": "ICAROUS  is a software architecture for the development of UAS applications",
        "name": "nasa/icarous",
        "topics": null,
        "website": ""
    },
    "nasa/icc": {
        "description": "This three-year project, funded by SSTP and in collaboration with Colorado School of Mines, develops efficient algorithms for communication-aware orbit optimization for multi-spacecraft systems around small bodies. The software release has been approved by the JPL SRA, Brian Morrison (NTR-51071).",
        "name": "nasa/icc",
        "topics": null,
        "website": null
    },
    "nasa/instructions": {
        "description": "https://github.com/nasa/nasa.github.io/blob/master/docs/INSTRUCTIONS.md",
        "name": "nasa/instructions",
        "topics": [
            "welcome-page",
            "nasa",
            "gov"
        ],
        "website": "https://github.com/nasa/instructions/blob/master/docs/INSTRUCTIONS.md"
    },
    "nasa/ipv6_python": {
        "description": null,
        "name": "nasa/ipv6_python",
        "topics": null,
        "website": null
    },
    "nasa/irg_open": {
        "description": null,
        "name": "nasa/irg_open",
        "topics": null,
        "website": null
    },
    "nasa/isaac": {
        "description": "Integrated System for Autonomous and Adaptive Caretaking",
        "name": "nasa/isaac",
        "topics": null,
        "website": null
    },
    "nasa/isaac_data_interface": {
        "description": "Integrated System for Autonomous and Adaptive Caretaking Web Interface",
        "name": "nasa/isaac_data_interface",
        "topics": null,
        "website": null
    },
    "nasa/isaac_msgs": {
        "description": "Integrated System for Autonomous and Adaptive Caretaking Common ROS Message Files",
        "name": "nasa/isaac_msgs",
        "topics": null,
        "website": null
    },
    "nasa/isce3-test": {
        "description": "Test CI integration & GitHub Pages domain hosting before migrating the isce3 repository.",
        "name": "nasa/isce3-test",
        "topics": null,
        "website": null
    },
    "nasa/isle": {
        "description": null,
        "name": "nasa/isle",
        "topics": null,
        "website": null
    },
    "nasa/kepler-pipeline": {
        "description": "Kepler Science Data Processing Pipeline",
        "name": "nasa/kepler-pipeline",
        "topics": null,
        "website": ""
    },
    "nasa/kepler-robovetter": {
        "description": null,
        "name": "nasa/kepler-robovetter",
        "topics": null,
        "website": null
    },
    "nasa/knife": {
        "description": null,
        "name": "nasa/knife",
        "topics": null,
        "website": null
    },
    "nasa/koviz": {
        "description": "Koviz is a Trick simulation data plotting, visualization and analysis tool",
        "name": "nasa/koviz",
        "topics": null,
        "website": null
    },
    "nasa/lager": {
        "description": null,
        "name": "nasa/lager",
        "topics": null,
        "website": null
    },
    "nasa/legacy-mars-global-climate-model": {
        "description": "We present the NASA Ames Legacy Mars Global Climate Model for public release. This model uses a modified version of the ARIES/GEOS dynamical core coupled with a set of Mars physics packages to simulate the martian climate. The physics packages include the treatment of surface properties, a ground temperature model, a planetary boundary layer scheme, water and carbon dioxide sublimation/condensation physics, a water ice cloud microphysical scheme, the use of a moment method for tracer transport, a semi-interactive dust tracking scheme, and a two-stream radiative transfer code based on correlated-k\u2019s.",
        "name": "nasa/legacy-mars-global-climate-model",
        "topics": [
            "mars",
            "gcm",
            "global-climate-model",
            "climate-model",
            "climate-modeling",
            "atmosphere",
            "microphysics",
            "dust",
            "clouds"
        ],
        "website": "https://www.nasa.gov/mars-climate-modeling-center-ames"
    },
    "nasa/libSPRITE": {
        "description": "libSPRITE is a set of libraries that have been used on several past projects including flight, technology demonstration, and simulation projects. libSPRITE provides a diverse set of functions to attempt to simplify coding and reduce code errors. For example, libSPRITE defines engineering units as types (i.e., Meters or Radians instead of double or int). It includes an engineering unit aware math library. libSPRITE includes a task scheduling system that abstracts pthreads and includes a publish subscribe data system for data routing. In addition, libSPRITE includes an optional binding to the Lua scripting language for configuring the program, setting parameters, running Lua scripts within C++ tasks and even interacting with the application during runtime.",
        "name": "nasa/libSPRITE",
        "topics": null,
        "website": ""
    },
    "nasa/maestro": {
        "description": "Procedure authoring tool",
        "name": "nasa/maestro",
        "topics": null,
        "website": null
    },
    "nasa/mct": {
        "description": "Open MCT has moved to https://github.com/nasa/openmct and is now a web application. The desktop version is retained here for posterity.",
        "name": "nasa/mct",
        "topics": null,
        "website": " https://github.com/nasa/openmct"
    },
    "nasa/meshNetwork": {
        "description": null,
        "name": "nasa/meshNetwork",
        "topics": null,
        "website": null
    },
    "nasa/microscopy-segmentation-models": {
        "description": null,
        "name": "nasa/microscopy-segmentation-models",
        "topics": null,
        "website": null
    },
    "nasa/mmt": {
        "description": "NASA's Metadata Management Tool.",
        "name": "nasa/mmt",
        "topics": null,
        "website": null
    },
    "nasa/mplStyle": {
        "description": "Matplotlib object oriented style system",
        "name": "nasa/mplStyle",
        "topics": null,
        "website": ""
    },
    "nasa/multipath-tcp-tools": {
        "description": null,
        "name": "nasa/multipath-tcp-tools",
        "topics": null,
        "website": null
    },
    "nasa/nasa": {
        "description": "A front banner for the github.com/nasa page",
        "name": "nasa/nasa",
        "topics": [
            "nasa"
        ],
        "website": "http://nasa.github.io/"
    },
    "nasa/nasa-data-vis": {
        "description": null,
        "name": "nasa/nasa-data-vis",
        "topics": null,
        "website": null
    },
    "nasa/nasa-latex-docs": {
        "description": "An easy and convenient package to create technical LaTeX documents.",
        "name": "nasa/nasa-latex-docs",
        "topics": [
            "latex",
            "latex-template",
            "latexmk",
            "aiaa",
            "ieee",
            "documentation"
        ],
        "website": ""
    },
    "nasa/nasapress": {
        "description": "A WordPress theme built on the NASA Web Design Standards",
        "name": "nasa/nasapress",
        "topics": null,
        "website": null
    },
    "nasa/nasapress-companion": {
        "description": "Contains functions and shortcodes used by the NASAPress Theme",
        "name": "nasa/nasapress-companion",
        "topics": null,
        "website": null
    },
    "nasa/nasawds-old": {
        "description": "The NASA Glenn Web Design System is a design system for building fast, accessible, mobile-friendly NASA websites.",
        "name": "nasa/nasawds-old",
        "topics": null,
        "website": "https://nasa.github.io/nasawds-site"
    },
    "nasa/nasawds-site": {
        "description": "No longer maintained.",
        "name": "nasa/nasawds-site",
        "topics": null,
        "website": "https://nasa.github.io/nasawds-site/"
    },
    "nasa/nos3": {
        "description": null,
        "name": "nasa/nos3",
        "topics": null,
        "website": null
    },
    "nasa/ogma": {
        "description": null,
        "name": "nasa/ogma",
        "topics": null,
        "website": null
    },
    "nasa/ominas": {
        "description": "Opensource Multi-INstrument Analysis Software",
        "name": "nasa/ominas",
        "topics": null,
        "website": ""
    },
    "nasa/ominas_maps": {
        "description": "Repository for OMINAS map library",
        "name": "nasa/ominas_maps",
        "topics": null,
        "website": null
    },
    "nasa/open-science-tools": {
        "description": "Python scripts for checking the contents of PubSpace for open science metrics.  Resources",
        "name": "nasa/open-science-tools",
        "topics": null,
        "website": null
    },
    "nasa/openmct": {
        "description": "A web based mission control framework. ",
        "name": "nasa/openmct",
        "topics": null,
        "website": "https://nasa.github.io/openmct/"
    },
    "nasa/openmct-demo": {
        "description": "An interactive demo of the Open MCT mission control software",
        "name": "nasa/openmct-demo",
        "topics": null,
        "website": null
    },
    "nasa/openmct-heatmap": {
        "description": null,
        "name": "nasa/openmct-heatmap",
        "topics": null,
        "website": null
    },
    "nasa/openmct-hello": {
        "description": "Hello, world plugin repository for Open MCT.",
        "name": "nasa/openmct-hello",
        "topics": null,
        "website": null
    },
    "nasa/openmct-map": {
        "description": null,
        "name": "nasa/openmct-map",
        "topics": null,
        "website": null
    },
    "nasa/openmct-python-view-generator": {
        "description": null,
        "name": "nasa/openmct-python-view-generator",
        "topics": null,
        "website": null
    },
    "nasa/openmct-tutorial": {
        "description": "A tutorial for OpenMCT that guides you through integrating historical and realtime telemetry.",
        "name": "nasa/openmct-tutorial",
        "topics": null,
        "website": ""
    },
    "nasa/opera-sds-pcm": {
        "description": "Observational Products for End-Users from Remote Sensing Analysis (OPERA)",
        "name": "nasa/opera-sds-pcm",
        "topics": null,
        "website": null
    },
    "nasa/opera-sds-pge": {
        "description": "Observational Products for End-Users from Remote Sensing Analysis (OPERA)",
        "name": "nasa/opera-sds-pge",
        "topics": null,
        "website": null
    },
    "nasa/opera-sds-sys": {
        "description": "Observational Products for End-Users from Remote Sensing Analysis (OPERA)",
        "name": "nasa/opera-sds-sys",
        "topics": null,
        "website": null
    },
    "nasa/osal": {
        "description": "The Core Flight System (cFS) Operating System Abstraction Layer (OSAL)",
        "name": "nasa/osal",
        "topics": null,
        "website": ""
    },
    "nasa/ow_autonomy": {
        "description": null,
        "name": "nasa/ow_autonomy",
        "topics": null,
        "website": null
    },
    "nasa/ow_enceladus": {
        "description": null,
        "name": "nasa/ow_enceladus",
        "topics": null,
        "website": null
    },
    "nasa/ow_europa": {
        "description": null,
        "name": "nasa/ow_europa",
        "topics": null,
        "website": null
    },
    "nasa/ow_simulator": {
        "description": null,
        "name": "nasa/ow_simulator",
        "topics": null,
        "website": null
    },
    "nasa/perfutils-java": {
        "description": "The Core Flight System (cFS) Performance Tool (perfutils-java)",
        "name": "nasa/perfutils-java",
        "topics": null,
        "website": null
    },
    "nasa/pigans-material-ID": {
        "description": null,
        "name": "nasa/pigans-material-ID",
        "topics": null,
        "website": null
    },
    "nasa/podaac_tools_and_services": {
        "description": "A meta-repository which essentially lists code related to all tools and services software for NASA JPL's PO.DAAC",
        "name": "nasa/podaac_tools_and_services",
        "topics": [
            "nasa",
            "podaac",
            "tools",
            "services",
            "oceanography",
            "ocean-surface-topography",
            "ost",
            "sea-surface-temperature",
            "sst",
            "ocean-winds",
            "sea-surface-salinity",
            "sss",
            "gravity",
            "ocean-circulation",
            "sea",
            "sea-ice",
            "physical-oceanography"
        ],
        "website": "https://podaac.jpl.nasa.gov"
    },
    "nasa/podaacpy": {
        "description": "A python utility library for interacting with NASA JPL's PO.DAAC",
        "name": "nasa/podaacpy",
        "topics": [
            "nasa",
            "nasa-data",
            "science",
            "oceanography",
            "metadata",
            "python",
            "podaac"
        ],
        "website": "http://podaacpy.readthedocs.org/en/latest/"
    },
    "nasa/polyfit": {
        "description": null,
        "name": "nasa/polyfit",
        "topics": null,
        "website": null
    },
    "nasa/prog_algs": {
        "description": "The Prognostic Algorithm Package is a python framework for model-based prognostics (computation of remaining useful life) of engineering systems, and provides a set of algorithms for state estimation and prediction, including uncertainty propagation. The algorithms take as inputs prognostic models (from NASA's Prognostics Model Package), and perform estimation and prediction functions. The library allows the rapid development of prognostics solutions for given models of components and systems. Different algorithms can be easily swapped to do comparative studies and evaluations of different algorithms to select the best for the application at hand.",
        "name": "nasa/prog_algs",
        "topics": [
            "prognostics",
            "prognostics-health-management",
            "integrated-system-health-management"
        ],
        "website": ""
    },
    "nasa/prog_models": {
        "description": "The NASA Prognostic Model Package is a Python framework focused on defining and building models for prognostics (computation of remaining useful life) of engineering systems, and provides a set of prognostics models for select components developed within this framework, suitable for use in prognostics applications for these components.",
        "name": "nasa/prog_models",
        "topics": [
            "simulation",
            "modeling",
            "prognostics",
            "prognostic-models",
            "prognostics-health-management"
        ],
        "website": ""
    },
    "nasa/puma": {
        "description": null,
        "name": "nasa/puma",
        "topics": null,
        "website": null
    },
    "nasa/pvslib": {
        "description": "NASA PVS Library of Formal Developments",
        "name": "nasa/pvslib",
        "topics": null,
        "website": "http://shemesh.larc.nasa.gov/fm/ftp/larc/PVS-library"
    },
    "nasa/pyCMR": {
        "description": "Client for CMR APIs",
        "name": "nasa/pyCMR",
        "topics": null,
        "website": null
    },
    "nasa/pycomdes-gui": {
        "description": null,
        "name": "nasa/pycomdes-gui",
        "topics": null,
        "website": null
    },
    "nasa/pycomdes-lib": {
        "description": null,
        "name": "nasa/pycomdes-lib",
        "topics": null,
        "website": null
    },
    "nasa/pymdptoolbox": {
        "description": "Markov Decision Process (MDP) Toolbox for Python",
        "name": "nasa/pymdptoolbox",
        "topics": [
            "usg-artificial-intelligence",
            "markov-decision-processes",
            "markov"
        ],
        "website": ""
    },
    "nasa/python_cmr": {
        "description": "Python library for querying the common metadata repository.",
        "name": "nasa/python_cmr",
        "topics": null,
        "website": null
    },
    "nasa/radbelt": {
        "description": "radbelt: An Astropy-friendly wrapper for the AE-8/AP-8 Van Allen belt model",
        "name": "nasa/radbelt",
        "topics": [
            "nasa",
            "magnetosphere",
            "radiation",
            "satellite",
            "cubesat",
            "igrf",
            "electron",
            "proton",
            "heliophysics"
        ],
        "website": ""
    },
    "nasa/rbf": {
        "description": "Mode shape interpolation via radial basis functions",
        "name": "nasa/rbf",
        "topics": null,
        "website": null
    },
    "nasa/refine": {
        "description": null,
        "name": "nasa/refine",
        "topics": null,
        "website": null
    },
    "nasa/resample_GLISTIN_DEMs": {
        "description": null,
        "name": "nasa/resample_GLISTIN_DEMs",
        "topics": null,
        "website": null
    },
    "nasa/rjnieves-open-repo": {
        "description": null,
        "name": "nasa/rjnieves-open-repo",
        "topics": null,
        "website": null
    },
    "nasa/rtap": {
        "description": null,
        "name": "nasa/rtap",
        "topics": null,
        "website": null
    },
    "nasa/russ-open-source": {
        "description": "A new open source repo",
        "name": "nasa/russ-open-source",
        "topics": null,
        "website": null
    },
    "nasa/sample_app": {
        "description": "The Core Flight System (cFS) Sample App (sample_app)",
        "name": "nasa/sample_app",
        "topics": null,
        "website": null
    },
    "nasa/sample_lib": {
        "description": "The Core Flight System (cFS) Sample Library (sample_lib)",
        "name": "nasa/sample_lib",
        "topics": null,
        "website": null
    },
    "nasa/sch_lab": {
        "description": "The Core Flight System (cFS) Scheduler Lab App (sch_lab)",
        "name": "nasa/sch_lab",
        "topics": null,
        "website": null
    },
    "nasa/scifen-solver": {
        "description": null,
        "name": "nasa/scifen-solver",
        "topics": null,
        "website": null
    },
    "nasa/scrub": {
        "description": "SCRUB is a platform for orchestration and aggregation of static code analysis tools.",
        "name": "nasa/scrub",
        "topics": [
            "static-analysis",
            "code-review",
            "code-quality",
            "security",
            "python"
        ],
        "website": ""
    },
    "nasa/simplegrid": {
        "description": null,
        "name": "nasa/simplegrid",
        "topics": null,
        "website": null
    },
    "nasa/simupy-flight": {
        "description": null,
        "name": "nasa/simupy-flight",
        "topics": null,
        "website": null
    },
    "nasa/sitepod": {
        "description": "A Sitemap Generator written in PHP",
        "name": "nasa/sitepod",
        "topics": [
            "sitemap-generator",
            "gplv3",
            "search-engine",
            "php",
            "sitemap",
            "sitemaps",
            "sitemap-xml",
            "sitemap-builder",
            "sitemap-files",
            "sitemap-url",
            "sitemap-php"
        ],
        "website": ""
    },
    "nasa/skeleton_app": {
        "description": "fork of sample_app",
        "name": "nasa/skeleton_app",
        "topics": null,
        "website": null
    },
    "nasa/spaceapps-phenomena_detection": {
        "description": null,
        "name": "nasa/spaceapps-phenomena_detection",
        "topics": null,
        "website": null
    },
    "nasa/stol-mode": {
        "description": null,
        "name": "nasa/stol-mode",
        "topics": null,
        "website": null
    },
    "nasa/svs": {
        "description": "Scientific Visualization Studio",
        "name": "nasa/svs",
        "topics": null,
        "website": null
    },
    "nasa/swSim": {
        "description": "Solid Wave Simulation (swSim) is software that solves heterogeneous, anisotropic elastodynamic equations for ultrasonic NDE simulation. A time-explicit staggered grid finite difference (FD) scheme is employed and solved on graphics processing units (GPUs). Parallelism via the Message Passing Interface (MPI) allows for deployment on a cluster, or on a single computer with one or more GPUs. Wavefield data is output using Visualization Toolkit (VTK) file formats for 3D rendering capabilities via open source tools, and a kernel composition module allows high-level registration of sequences of matrix operations, providing extensibility in equations and physics solved.",
        "name": "nasa/swSim",
        "topics": null,
        "website": "https://nasa.github.io/swSim/"
    },
    "nasa/tblCRCTool": {
        "description": "The Core Flight System (cFS) Table CRC Tool (tblCRCTool)",
        "name": "nasa/tblCRCTool",
        "topics": null,
        "website": null
    },
    "nasa/terraform-aws-cumulus-thin-egress-app": {
        "description": null,
        "name": "nasa/terraform-aws-cumulus-thin-egress-app",
        "topics": null,
        "website": null
    },
    "nasa/test": {
        "description": null,
        "name": "nasa/test",
        "topics": null,
        "website": null
    },
    "nasa/test-repo": {
        "description": null,
        "name": "nasa/test-repo",
        "topics": null,
        "website": null
    },
    "nasa/to_lab": {
        "description": "The Core Flight System (cFS) Telemetry Output Lab App (to_lab)",
        "name": "nasa/to_lab",
        "topics": null,
        "website": null
    },
    "nasa/trick": {
        "description": "Trick Simulation Environment.  Trick provides a common set of simulation capabilities and utilities to build simulations automatically.",
        "name": "nasa/trick",
        "topics": null,
        "website": ""
    },
    "nasa/uam-apis": {
        "description": null,
        "name": "nasa/uam-apis",
        "topics": null,
        "website": null
    },
    "nasa/utm-apis": {
        "description": "The collection of APIs for NASA's UTM project in the form of OpenAPI documents.",
        "name": "nasa/utm-apis",
        "topics": null,
        "website": null
    },
    "nasa/utm-docs": {
        "description": null,
        "name": "nasa/utm-docs",
        "topics": null,
        "website": null
    },
    "nasa/visionworkbench": {
        "description": "The NASA Vision Workbench is a general purpose image processing and computer vision library developed by the Autonomous Systems and Robotics (ASR) Area in the Intelligent Systems Division at the NASA Ames Research Center.",
        "name": "nasa/visionworkbench",
        "topics": null,
        "website": "http://ti.arc.nasa.gov/project/nasa-vision-workbench/"
    },
    "nasa/vscode-pvs": {
        "description": "LAR-19642-1: Visual Studio Code Extension for PVS",
        "name": "nasa/vscode-pvs",
        "topics": null,
        "website": null
    },
    "nasa/vsm": {
        "description": null,
        "name": "nasa/vsm",
        "topics": null,
        "website": null
    },
    "nasa/webgs": {
        "description": "LAR-19641-1: WebGS: Web-based Platform for Multi-UAV Flight Visualization and Simulation",
        "name": "nasa/webgs",
        "topics": null,
        "website": null
    },
    "nasa/xasgo": {
        "description": null,
        "name": "nasa/xasgo",
        "topics": null,
        "website": null
    },
    "nasa/zarr-eosdis-store": {
        "description": "Zarr data store for efficiently accessing NetCDF4 data from NASA\u2019s Earth observing system in the cloud using the Zarr Python library",
        "name": "nasa/zarr-eosdis-store",
        "topics": null,
        "website": null
    },
    "nasajoey/dwsolver": {
        "description": "Implementation of Dantzig-Wolfe decomposition built on GLPK.",
        "name": "nasajoey/dwsolver",
        "topics": null,
        "website": ""
    },
    "nasajpl/tiledwms": {
        "description": null,
        "name": "nasajpl/tiledwms",
        "topics": null,
        "website": null
    },
    "pkolano/ballast": {
        "description": "Lightweight SSH load balancer supporting user-specific selection policies",
        "name": "pkolano/ballast",
        "topics": null,
        "website": "https://pkolano.github.io/projects/ballast.html"
    },
    "pkolano/mutil": {
        "description": "Multi-threaded cp and md5sum based on GNU coreutils",
        "name": "pkolano/mutil",
        "topics": null,
        "website": "https://pkolano.github.io/projects/mutil.html"
    },
    "pkolano/retools": {
        "description": "Automatic lustre striping during file creation when using bzip2, gzip, rsync, and tar",
        "name": "pkolano/retools",
        "topics": null,
        "website": "https://pkolano.github.io/projects/retools.html"
    },
    "pkolano/savors": {
        "description": "Framework for visualizing the output from any text-based command-line utility",
        "name": "pkolano/savors",
        "topics": null,
        "website": "https://pkolano.github.io/projects/savors.html"
    },
    "psycopaths/psyco": {
        "description": "A tool for generating symbolic interfaces for software components",
        "name": "psycopaths/psyco",
        "topics": null,
        "website": null
    },
    "rodluger/everest": {
        "description": "De-trending of K2 Light curves",
        "name": "rodluger/everest",
        "topics": [
            "exoplanets",
            "photometry",
            "kepler",
            "k2-light-curves",
            "k2-data-science",
            "exoplanet-transits"
        ],
        "website": "https://rodluger.github.io/everest"
    },
    "siravan/fits": {
        "description": "A golang FITS format reader",
        "name": "siravan/fits",
        "topics": null,
        "website": ""
    },
    "spacetelescope/jwst_backgrounds": {
        "description": "This tool retrieves background intensity spectra relevant for JWST",
        "name": "spacetelescope/jwst_backgrounds",
        "topics": [
            "stsci",
            "jwst",
            "background"
        ],
        "website": ""
    },
    "sunpy/sunpy": {
        "description": "SunPy - Python for Solar Physics",
        "name": "sunpy/sunpy",
        "topics": [
            "sunpy",
            "python",
            "astronomy",
            "solar",
            "astropy",
            "solar-physics",
            "sun",
            "hacktoberfest"
        ],
        "website": "http://www.sunpy.org"
    },
    "visionworkbench/visionworkbench": {
        "description": "The NASA Vision Workbench is a general purpose image processing and computer vision library developed by the Autonomous Systems and Robotics (ASR) Area in the Intelligent Systems Division at the NASA Ames Research Center.",
        "name": "visionworkbench/visionworkbench",
        "topics": null,
        "website": "http://irg.arc.nasa.gov/nasa-vision-workbench"
    },
    "wkiri/DEMUD": {
        "description": "Discovery via Eigenbasis Modeling of Uninteresting Data",
        "name": "wkiri/DEMUD",
        "topics": null,
        "website": null
    },
    "wlandsman/IDLAstro": {
        "description": "Astronomy related procedures in the commercial IDL language",
        "name": "wlandsman/IDLAstro",
        "topics": null,
        "website": "https://idlastro.gsfc.nasa.gov/homepage.html"
    }
}